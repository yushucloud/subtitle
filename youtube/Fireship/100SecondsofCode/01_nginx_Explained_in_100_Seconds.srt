1
00:00:00,399 --> 00:00:04,319
nginx it's like a gateway that stands between the internet and your back-end
nginx像一个网关，位于互联网和后端基础架构之间

2
00:00:04,319 --> 00:00:06,799
infrastructure when you visit a web app the first place
当您访问 Web 应用程序时您的请求首先会

3
00:00:06,799 --> 00:00:10,639
your request will go is to a web server its job is to look at the requested
发送到 Web 服务器，它的任务是查看请求的资源

4
00:00:10,639 --> 00:00:14,000
resource and determine where to find it on the server then send it back
并确定在服务器哪个地方可以找到它

5
00:00:14,000 --> 00:00:17,680
as the response in fact if you open up the network tab in chrome dev tools
然后将其作为响应返回，事实上如果您现在在 chrome 开发工具中打开网络选项卡

6
00:00:17,680 --> 00:00:19,920
right now you can look at the server header on any
您可以查看任何服务器上的响应上请求头

7
00:00:19,920 --> 00:00:22,480
response and there's a good chance it'll be nginx
它很有可能就是nginx

8
00:00:22,480 --> 00:00:25,840
it's extremely popular with high traffic sites because it can handle more than 10
它在高并发站点非常受欢迎

9
00:00:25,840 --> 00:00:29,119
000 simultaneous connections with its event driven architecture
因为它可以通过事件驱动架构，能同时处理超过 10,000 个连接

10
00:00:29,119 --> 00:00:32,960
it's also commonly used as a reverse proxy where it acts as a traffic light
它通常也用作反向代理，它充当信号灯将负载

11
00:00:32,960 --> 00:00:36,320
to distribute the load to multiple backend servers while also providing
分配到多个后端服务器，同时在大多数情况下

12
00:00:36,320 --> 00:00:39,040
security and caching for better performance in
还提供安全性和缓存以便获得更好的性能

13
00:00:39,040 --> 00:00:42,960
most cases it'll be installed on a linux server with the configuration file being
将它安装在 linux服务器上，配置文件位于 etc目录中

14
00:00:42,960 --> 00:00:45,680
found in the etc directory you customize the behavior of
您可以通过定义指令自定义服务器的行为

15
00:00:45,680 --> 00:00:50,000
your server by defining directives a directive is just a key value pair or
指令只是一个键值对，如果后面跟着

16
00:00:50,000 --> 00:00:53,520
if followed by braces it's known as a context which itself holds more
大括号它被称为上下文

17
00:00:53,520 --> 00:00:55,760
directives in the global context we might want to
它本身在全局上下文中包含很多指令

18
00:00:55,760 --> 00:00:59,440
specify things like a username and where to save our error logs but
我们或许想要指定用户名和保存错误日志的位置

19
00:00:59,440 --> 00:01:03,280
most of your configuration will likely be done in the http context
但您的大部分配置可能会在 http 上下文中完成

20
00:01:03,280 --> 00:01:06,880
now one of the most important roles of nginx is to serve out static content
现在nginx 最重要的角色之一是提供静态内容

21
00:01:06,880 --> 00:01:09,600
like images and html we can handle that in
像图像和 html，我们可以在 http 上下文中处理它

22
00:01:09,600 --> 00:01:12,960
the http context where we'll define one or more servers
我们将定义一个或多个服务器

23
00:01:12,960 --> 00:01:17,040
each server is distinguished by the port that it listens to nginx will keep track
每个服务器由端口区分，nginx监听器将跟踪对服务器的每个请求

24
00:01:17,040 --> 00:01:20,640
of every request to the server which you can write to an access log the
可以将其写入访问日志中

25
00:01:20,640 --> 00:01:24,000
most important thing though is to tell the server where to find the raw files
但最重要的是告诉服务器在哪里可以找到

26
00:01:24,000 --> 00:01:27,920
which we do in the location context now when a user navigates to our domain
我们现在配置上下文中执行的原始文件，当用户访问到我们的网站时

27
00:01:27,920 --> 00:01:31,280
it knows where to find the html on the file system and we might want to
它知道在文件系统上的哪个位置可以找到html

28
00:01:31,280 --> 00:01:34,799
set up a second location to match any image pattern to the images
我们可能希望设置第二个位置以将任何图像模式与图像目录匹配

29
00:01:34,799 --> 00:01:37,920
directory other common things you might handle in your server config
您可能会在您的文件系统中处理其他常见的服务器配置相的关操作

30
00:01:37,920 --> 00:01:42,560
include ssl certificates rewrites and routing to a proxy server when i replace
包括 ssl 证书重写和路由代理服务器

31
00:01:42,560 --> 00:01:45,439
root with proxy pass i can point to a completely different
当我用代理通行证替换 root时，我可以创建一个反向代理

32
00:01:45,439 --> 00:01:48,640
server on the internet what we've created is a reverse proxy that can
指向互联网上完全不同的服务器

33
00:01:48,640 --> 00:01:51,520
handle caching anonymity and load balancing this has
可以处理缓存匿名和负载均衡

34
00:01:51,520 --> 00:01:54,640
been nginx in 100 seconds hit the like button if you want to see
这就是100秒对nginx的简单介绍

35
00:01:54,640 --> 00:01:56,799
more short videos like this thanks for watching
更多这样的短视频敬请期待

36
00:01:56,799 --> 00:02:06,320
and i will see you in the next one
下次见