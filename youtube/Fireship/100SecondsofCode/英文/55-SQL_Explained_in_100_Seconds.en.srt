1
00:00:00,320 --> 00:00:03,439
structured query language sql or sql for


2
00:00:03,439 --> 00:00:05,600
short is the gold standard language for


3
00:00:05,600 --> 00:00:07,520
communicating with relational database


4
00:00:07,520 --> 00:00:09,280
management systems you've likely heard


5
00:00:09,280 --> 00:00:11,280
of databases like mysql


6
00:00:11,280 --> 00:00:14,240
postgres microsoft sql server and oracle


7
00:00:14,240 --> 00:00:16,160
all of which are based on sql with their


8
00:00:16,160 --> 00:00:17,359
own little variations


9
00:00:17,359 --> 00:00:19,039
it was initially developed in the early


10
00:00:19,039 --> 00:00:21,600
70s to mutate and retrieve data from


11
00:00:21,600 --> 00:00:24,800
ibm's system r database by 1986


12
00:00:24,800 --> 00:00:26,960
it was standardized into the syntax that


13
00:00:26,960 --> 00:00:28,880
remains extremely popular in technical


14
00:00:28,880 --> 00:00:31,119
applications today a relational database


15
00:00:31,119 --> 00:00:33,120
organizes data into tables


16
00:00:33,120 --> 00:00:34,960
kind of like an excel spreadsheet where


17
00:00:34,960 --> 00:00:36,960
columns contain attributes or types of


18
00:00:36,960 --> 00:00:37,440
data


19
00:00:37,440 --> 00:00:39,440
while each row represents an individual


20
00:00:39,440 --> 00:00:41,600
record or data point with its own unique


21
00:00:41,600 --> 00:00:42,000
id


22
00:00:42,000 --> 00:00:44,320
known as a primary key we can establish


23
00:00:44,320 --> 00:00:46,239
relationships between data points


24
00:00:46,239 --> 00:00:48,399
by taking the unique id from one row and


25
00:00:48,399 --> 00:00:50,160
storing it on a different row in a


26
00:00:50,160 --> 00:00:50,960
different table


27
00:00:50,960 --> 00:00:53,120
in a special column known as a foreign


28
00:00:53,120 --> 00:00:55,199
key in the teams table the team id


29
00:00:55,199 --> 00:00:57,199
is the primary key but in the players


30
00:00:57,199 --> 00:00:58,800
table it's the foreign key


31
00:00:58,800 --> 00:01:00,719
and what that data structure tells us is


32
00:01:00,719 --> 00:01:02,960
that a player belongs to one team


33
00:01:02,960 --> 00:01:05,439
while a team can have many players what


34
00:01:05,439 --> 00:01:06,159
we've done here


35
00:01:06,159 --> 00:01:08,240
is structured our data in its smallest


36
00:01:08,240 --> 00:01:10,560
normal form to eliminate duplication and


37
00:01:10,560 --> 00:01:11,520
redundancy


38
00:01:11,520 --> 00:01:14,560
now the role of sql is not only to read


39
00:01:14,560 --> 00:01:15,119
create


40
00:01:15,119 --> 00:01:17,759
update and delete data but also to join


41
00:01:17,759 --> 00:01:18,720
data together


42
00:01:18,720 --> 00:01:20,320
based on the relationships embedded


43
00:01:20,320 --> 00:01:21,759
within it the syntax


44
00:01:21,759 --> 00:01:24,240
is comprised of several key parts if we


45
00:01:24,240 --> 00:01:25,280
zoom all the way out


46
00:01:25,280 --> 00:01:27,439
we have a statement or a piece of code


47
00:01:27,439 --> 00:01:28,400
that does something


48
00:01:28,400 --> 00:01:30,400
like reads or writes to the database


49
00:01:30,400 --> 00:01:32,320
within a statement we have a variety of


50
00:01:32,320 --> 00:01:33,920
keywords that can manipulate the


51
00:01:33,920 --> 00:01:34,640
database


52
00:01:34,640 --> 00:01:36,880
select can be used to make a query for


53
00:01:36,880 --> 00:01:38,159
the columns that you want


54
00:01:38,159 --> 00:01:41,040
from a table the column and table names


55
00:01:41,040 --> 00:01:41,840
are known as


56
00:01:41,840 --> 00:01:43,920
identifiers but we may not want every


57
00:01:43,920 --> 00:01:45,439
row in the table so we filter the


58
00:01:45,439 --> 00:01:47,280
results with the where keyword to only


59
00:01:47,280 --> 00:01:48,799
include records that meet a certain


60
00:01:48,799 --> 00:01:49,439
condition


61
00:01:49,439 --> 00:01:51,119
it's like looping over every row in the


62
00:01:51,119 --> 00:01:52,720
table and only returning rows in the


63
00:01:52,720 --> 00:01:54,560
query where the predicate evaluates to


64
00:01:54,560 --> 00:01:55,119
true


65
00:01:55,119 --> 00:01:57,119
then we might use the join keyword to


66
00:01:57,119 --> 00:01:58,719
connect data from an entirely different


67
00:01:58,719 --> 00:01:59,360
table


68
00:01:59,360 --> 00:02:01,119
by matching the primary key on this


69
00:02:01,119 --> 00:02:03,040
table to the foreign key on another


70
00:02:03,040 --> 00:02:03,600
table


71
00:02:03,600 --> 00:02:05,439
what we've created is a collection of


72
00:02:05,439 --> 00:02:06,960
clauses that make up


73
00:02:06,960 --> 00:02:09,280
a full sql statement we can now go and


74
00:02:09,280 --> 00:02:10,800
execute this code on the hundreds of


75
00:02:10,800 --> 00:02:12,400
different databases that support


76
00:02:12,400 --> 00:02:14,400
sql this has been structured query


77
00:02:14,400 --> 00:02:16,000
language in 100 seconds


78
00:02:16,000 --> 00:02:17,680
like and subscribe if you want to see a


79
00:02:17,680 --> 00:02:19,040
full sql tutorial


80
00:02:19,040 --> 00:02:20,879
thanks for watching and i will see you


81
00:02:20,879 --> 00:02:23,840
in the next one


