1
00:00:00,000 --> 00:00:02,000
kubernetes a tool for managing and


2
00:00:02,000 --> 00:00:03,679
automating containerized workloads in


3
00:00:03,679 --> 00:00:04,319
the cloud


4
00:00:04,319 --> 00:00:05,920
imagine you have an orchestra think of


5
00:00:05,920 --> 00:00:07,759
each individual musician as a docker


6
00:00:07,759 --> 00:00:08,320
container


7
00:00:08,320 --> 00:00:09,920
to create beautiful music we need a


8
00:00:09,920 --> 00:00:11,840
conductor to manage the musicians and


9
00:00:11,840 --> 00:00:12,639
set the tempo


10
00:00:12,639 --> 00:00:14,639
now imagine the conductor as kubernetes


11
00:00:14,639 --> 00:00:16,160
and the orchestra as an app like


12
00:00:16,160 --> 00:00:18,000
robinhood when the markets are closed an


13
00:00:18,000 --> 00:00:18,880
app like robinhood


14
00:00:18,880 --> 00:00:20,400
isn't doing much but when they open it


15
00:00:20,400 --> 00:00:22,000
needs to fulfill millions of trades for


16
00:00:22,000 --> 00:00:24,080
overpriced stocks like tesla and shopify


17
00:00:24,080 --> 00:00:25,920
kubernetes is the tool that orchestrates


18
00:00:25,920 --> 00:00:27,439
the infrastructure to handle the


19
00:00:27,439 --> 00:00:28,880
changing workload it can scale


20
00:00:28,880 --> 00:00:30,000
containers across multiple


21
00:00:30,000 --> 00:00:31,920
machines and if one fails it knows how


22
00:00:31,920 --> 00:00:33,760
to replace it with a new one a system


23
00:00:33,760 --> 00:00:35,360
deployed on kubernetes is known as a


24
00:00:35,360 --> 00:00:36,079
cluster


25
00:00:36,079 --> 00:00:37,680
the brain of the operation is known as


26
00:00:37,680 --> 00:00:39,680
the control plane it exposes an api


27
00:00:39,680 --> 00:00:41,360
server that can handle both internal and


28
00:00:41,360 --> 00:00:43,440
external requests to manage the cluster


29
00:00:43,440 --> 00:00:45,120
it also contains its own key value


30
00:00:45,120 --> 00:00:45,920
database called


31
00:00:45,920 --> 00:00:47,920
etcd used to store important information


32
00:00:47,920 --> 00:00:49,120
about running the cluster


33
00:00:49,120 --> 00:00:50,960
what it's managing is one or more worker


34
00:00:50,960 --> 00:00:52,239
machines called nodes


35
00:00:52,239 --> 00:00:54,079
when you hear node think of a machine


36
00:00:54,079 --> 00:00:55,520
each node is running something called a


37
00:00:55,520 --> 00:00:56,160
cubelet


38
00:00:56,160 --> 00:00:57,760
which is a tiny application that runs on


39
00:00:57,760 --> 00:00:59,520
the machine to communicate back with the


40
00:00:59,520 --> 00:01:01,120
main control plane mother ship


41
00:01:01,120 --> 00:01:02,800
inside of each node we have multiple


42
00:01:02,800 --> 00:01:04,559
pods which is the smallest deployable


43
00:01:04,559 --> 00:01:05,760
unit in kubernetes


44
00:01:05,760 --> 00:01:07,360
when you hear pod think of a pot of


45
00:01:07,360 --> 00:01:09,360
whales or containers running together


46
00:01:09,360 --> 00:01:11,360
as the workload increases kubernetes can


47
00:01:11,360 --> 00:01:13,200
automatically scale horizontally by


48
00:01:13,200 --> 00:01:14,880
adding more nodes to the cluster


49
00:01:14,880 --> 00:01:16,159
in the process it takes care of


50
00:01:16,159 --> 00:01:17,759
complicated things like networking


51
00:01:17,759 --> 00:01:19,759
secret management persistent storage and


52
00:01:19,759 --> 00:01:20,320
so on


53
00:01:20,320 --> 00:01:22,400
it's designed for high availability and


54
00:01:22,400 --> 00:01:23,600
one way it achieves that is by


55
00:01:23,600 --> 00:01:25,600
maintaining a replica set which is just


56
00:01:25,600 --> 00:01:27,360
a set of running pods or containers


57
00:01:27,360 --> 00:01:28,080
ready to go


58
00:01:28,080 --> 00:01:30,159
at any given time as a developer you


59
00:01:30,159 --> 00:01:32,240
define objects in yaml that describe the


60
00:01:32,240 --> 00:01:33,759
desired state of your cluster


61
00:01:33,759 --> 00:01:35,520
for example we might have an nginx


62
00:01:35,520 --> 00:01:37,360
deployment that has a replica set with


63
00:01:37,360 --> 00:01:38,159
three pods


64
00:01:38,159 --> 00:01:39,920
in the spec field we can define exactly


65
00:01:39,920 --> 00:01:41,840
how it should behave like its containers


66
00:01:41,840 --> 00:01:43,759
volumes ports and so on you can then


67
00:01:43,759 --> 00:01:45,680
take this configuration and use it to


68
00:01:45,680 --> 00:01:47,360
provision and scale containers


69
00:01:47,360 --> 00:01:48,799
automatically and ensure that they're


70
00:01:48,799 --> 00:01:50,479
always up and running and healthy


71
00:01:50,479 --> 00:01:52,640
this has been kubernetes in 100 seconds


72
00:01:52,640 --> 00:01:54,159
like and subscribe for more and you can


73
00:01:54,159 --> 00:01:55,920
support my work by sponsoring me on


74
00:01:55,920 --> 00:01:57,920
github or by becoming a pro member at


75
00:01:57,920 --> 00:01:59,920
fireship io for even more content


76
00:01:59,920 --> 00:02:01,680
thanks for watching and i will see you


77
00:02:01,680 --> 00:02:08,000
in the next one


