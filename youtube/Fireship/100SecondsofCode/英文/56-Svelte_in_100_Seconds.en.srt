1
00:00:00,080 --> 00:00:02,000
svelt it's a javascript tool for


2
00:00:02,000 --> 00:00:04,080
building ui components just like react


3
00:00:04,080 --> 00:00:06,080
angular or vue but unlike its peers


4
00:00:06,080 --> 00:00:08,000
would ship a javascript runtime to the


5
00:00:08,000 --> 00:00:09,440
browser to make your code work


6
00:00:09,440 --> 00:00:11,679
svelte is a compiler it converts the


7
00:00:11,679 --> 00:00:12,960
declarative code that you'd love to


8
00:00:12,960 --> 00:00:14,080
write as a developer


9
00:00:14,080 --> 00:00:15,839
into imperative code that works with


10
00:00:15,839 --> 00:00:17,279
native browser apis


11
00:00:17,279 --> 00:00:19,119
as a result you get highly performant


12
00:00:19,119 --> 00:00:20,800
code in a very small package


13
00:00:20,800 --> 00:00:22,400
but most importantly it's the only


14
00:00:22,400 --> 00:00:23,920
javascript framework that's actually


15
00:00:23,920 --> 00:00:27,519
enjoyable to use


16
00:00:27,519 --> 00:00:29,359
we create components in dot spelled


17
00:00:29,359 --> 00:00:31,439
files which contain three main parts


18
00:00:31,439 --> 00:00:33,440
a script for your javascript code which


19
00:00:33,440 --> 00:00:34,800
can also be typescript


20
00:00:34,800 --> 00:00:37,200
a style tag for your css which can also


21
00:00:37,200 --> 00:00:39,440
use a preprocessor like sas and the main


22
00:00:39,440 --> 00:00:42,000
template represented as regular html


23
00:00:42,000 --> 00:00:44,160
but it's no ordinary html it's been


24
00:00:44,160 --> 00:00:46,079
empowered with all kinds of extra syntax


25
00:00:46,079 --> 00:00:47,600
for writing declarative code


26
00:00:47,600 --> 00:00:49,680
need reactive state simply define a


27
00:00:49,680 --> 00:00:51,360
variable with the let keyword then


28
00:00:51,360 --> 00:00:53,520
reference it dynamically in the html


29
00:00:53,520 --> 00:00:55,280
using braces if we want to change the


30
00:00:55,280 --> 00:00:56,960
state we can do that by defining a


31
00:00:56,960 --> 00:00:58,000
function then listen


32
00:00:58,000 --> 00:01:00,320
to an event in the dom with on and bind


33
00:01:00,320 --> 00:01:02,000
the function to it as the handler


34
00:01:02,000 --> 00:01:03,680
now when the value of that variable


35
00:01:03,680 --> 00:01:05,600
changes the component will automatically


36
00:01:05,600 --> 00:01:07,760
re-render to show the updated state


37
00:01:07,760 --> 00:01:09,119
in many cases you'll need to run


38
00:01:09,119 --> 00:01:10,799
conditional logic or loops in your


39
00:01:10,799 --> 00:01:11,360
template


40
00:01:11,360 --> 00:01:12,799
instead of fighting against javascript


41
00:01:12,799 --> 00:01:14,960
functions it empowers you with a syntax


42
00:01:14,960 --> 00:01:16,720
where you can clearly create an if else


43
00:01:16,720 --> 00:01:17,200
statement


44
00:01:17,200 --> 00:01:19,200
or a for each loop when working with a


45
00:01:19,200 --> 00:01:20,400
list now when it comes to


46
00:01:20,400 --> 00:01:22,000
cross-component communication


47
00:01:22,000 --> 00:01:23,280
spelt provides multiple different


48
00:01:23,280 --> 00:01:25,119
strategies for sharing data between


49
00:01:25,119 --> 00:01:27,360
components to pass data from a parent to


50
00:01:27,360 --> 00:01:29,360
child you can use props by adding the


51
00:01:29,360 --> 00:01:31,439
export keyword to a variable and now you


52
00:01:31,439 --> 00:01:33,040
can pass data into this component


53
00:01:33,040 --> 00:01:34,479
and if you have a ton of props you can


54
00:01:34,479 --> 00:01:36,400
use the spread syntax to keep your code


55
00:01:36,400 --> 00:01:37,840
looking fit and healthy


56
00:01:37,840 --> 00:01:39,759
now for more complex component trees you


57
00:01:39,759 --> 00:01:42,000
have a context api just like react


58
00:01:42,000 --> 00:01:43,920
and if that wasn't enough spelt also has


59
00:01:43,920 --> 00:01:46,000
a really nice mechanism called stores


60
00:01:46,000 --> 00:01:47,680
which are like observables that can be


61
00:01:47,680 --> 00:01:49,360
shared anywhere in the component tree


62
00:01:49,360 --> 00:01:51,040
and subscribed to in the template by


63
00:01:51,040 --> 00:01:52,640
putting a dollar sign in front of them


64
00:01:52,640 --> 00:01:54,479
after you've built an awesome ui you can


65
00:01:54,479 --> 00:01:56,479
then use the compiler to convert it to


66
00:01:56,479 --> 00:01:57,600
vanilla javascript


67
00:01:57,600 --> 00:01:59,040
and if you're building a full-blown web


68
00:01:59,040 --> 00:02:01,119
application you can use spelt kit to


69
00:02:01,119 --> 00:02:02,880
quickly implement server-side rendering


70
00:02:02,880 --> 00:02:04,880
routing and code splitting this has been


71
00:02:04,880 --> 00:02:06,479
spelt in 100 seconds


72
00:02:06,479 --> 00:02:07,680
hit the like button if you want to see


73
00:02:07,680 --> 00:02:09,840
more thanks for watching and i will see


74
00:02:09,840 --> 00:02:13,120
you in the next one


