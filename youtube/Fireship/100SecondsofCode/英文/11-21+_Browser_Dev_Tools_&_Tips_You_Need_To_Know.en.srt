1
00:00:00,080 --> 00:00:01,839
on the internet you'll find scammers who


2
00:00:01,839 --> 00:00:03,360
show off their massive bank account


3
00:00:03,360 --> 00:00:05,200
balances while they try to sell you a


4
00:00:05,200 --> 00:00:06,960
course on how you can get there too


5
00:00:06,960 --> 00:00:08,559
but there's actually an easier way to


6
00:00:08,559 --> 00:00:09,840
grow your bank account open up the


7
00:00:09,840 --> 00:00:12,000
browser console with ctrl shift j


8
00:00:12,000 --> 00:00:13,920
then execute this line of code to turn


9
00:00:13,920 --> 00:00:15,839
the document's design mode on


10
00:00:15,839 --> 00:00:17,600
we can now modify any text in the web


11
00:00:17,600 --> 00:00:19,279
page itself like the bank account


12
00:00:19,279 --> 00:00:19,920
balance


13
00:00:19,920 --> 00:00:22,000
as developers we tend to take a lot of


14
00:00:22,000 --> 00:00:24,000
technologies for granted one of which is


15
00:00:24,000 --> 00:00:24,960
the web browser


16
00:00:24,960 --> 00:00:26,480
not only is it one of the most important


17
00:00:26,480 --> 00:00:28,320
technologies for all of humanity but


18
00:00:28,320 --> 00:00:30,160
modern browsers contain all kinds of


19
00:00:30,160 --> 00:00:31,840
awesome developer tools that were


20
00:00:31,840 --> 00:00:33,440
unimaginable 10 years ago


21
00:00:33,440 --> 00:00:35,280
in today's video we'll look at a ton of


22
00:00:35,280 --> 00:00:37,040
features and tricks in your browser's


23
00:00:37,040 --> 00:00:38,800
dev tools that you probably didn't know


24
00:00:38,800 --> 00:00:40,399
exist and will make your life much


25
00:00:40,399 --> 00:00:42,000
easier as a web developer


26
00:00:42,000 --> 00:00:43,600
first like and subscribe to keep this


27
00:00:43,600 --> 00:00:45,760
content coming then add your own pro tip


28
00:00:45,760 --> 00:00:47,120
to the comments and i'll pick one of


29
00:00:47,120 --> 00:00:49,120
them to win this free t-shirt next week


30
00:00:49,120 --> 00:00:50,640
i'm going to focus on chrome dev tools


31
00:00:50,640 --> 00:00:52,879
in this video but firefox also has an


32
00:00:52,879 --> 00:00:54,640
awesome suite of dev tools and most of


33
00:00:54,640 --> 00:00:55,600
the tricks i'll show you


34
00:00:55,600 --> 00:00:57,600
apply to both browsers and if you use


35
00:00:57,600 --> 00:00:59,199
edge or brave they're both based on


36
00:00:59,199 --> 00:01:01,120
chromium so everything applies there as


37
00:01:01,120 --> 00:01:01,520
well


38
00:01:01,520 --> 00:01:03,199
and if you use safari or internet


39
00:01:03,199 --> 00:01:04,799
explorer may god help you


40
00:01:04,799 --> 00:01:06,640
first we need to open up the console


41
00:01:06,640 --> 00:01:08,720
which we can do with the ctrl shift j


42
00:01:08,720 --> 00:01:10,240
shortcut what you may not know


43
00:01:10,240 --> 00:01:11,840
is that chrome has a command palette


44
00:01:11,840 --> 00:01:13,840
just like vs code that you can access


45
00:01:13,840 --> 00:01:14,799
with control p


46
00:01:14,799 --> 00:01:16,560
type an angle bracket and that will give


47
00:01:16,560 --> 00:01:17,920
you a list of every command


48
00:01:17,920 --> 00:01:19,840
at your disposal in the dev tools a


49
00:01:19,840 --> 00:01:21,439
useful one especially if you want to


50
00:01:21,439 --> 00:01:22,640
show off your bank account


51
00:01:22,640 --> 00:01:24,479
is screenshot which allows you to


52
00:01:24,479 --> 00:01:26,080
screenshot an entire page


53
00:01:26,080 --> 00:01:28,960
a custom area or an individual dom node


54
00:01:28,960 --> 00:01:30,479
but if we go ahead and open up the


55
00:01:30,479 --> 00:01:31,439
command palette again


56
00:01:31,439 --> 00:01:33,360
you'll notice it provides a big list of


57
00:01:33,360 --> 00:01:36,000
files these files are the actual html


58
00:01:36,000 --> 00:01:36,640
css


59
00:01:36,640 --> 00:01:38,960
javascript and images loaded by this


60
00:01:38,960 --> 00:01:39,680
webpage


61
00:01:39,680 --> 00:01:41,360
when you click on one it takes you to


62
00:01:41,360 --> 00:01:43,119
the sources tab where you can actually


63
00:01:43,119 --> 00:01:44,640
edit and inspect the file


64
00:01:44,640 --> 00:01:46,640
in production it's likely minified so


65
00:01:46,640 --> 00:01:48,479
click the pretty print button to make it


66
00:01:48,479 --> 00:01:50,159
look nicer but here's something you


67
00:01:50,159 --> 00:01:50,799
didn't know


68
00:01:50,799 --> 00:01:52,240
in the bottom right corner you'll see


69
00:01:52,240 --> 00:01:54,000
the option for coverage which will bring


70
00:01:54,000 --> 00:01:55,680
up the coverage panel and this will tell


71
00:01:55,680 --> 00:01:58,000
you exactly how much your javascript or


72
00:01:58,000 --> 00:02:00,320
css is contributing to the visual


73
00:02:00,320 --> 00:02:01,520
elements on this page


74
00:02:01,520 --> 00:02:04,159
red bars indicate unused or dead code


75
00:02:04,159 --> 00:02:06,000
that may be making your app slower


76
00:02:06,000 --> 00:02:07,360
you might want to go verify that that


77
00:02:07,360 --> 00:02:08,879
code is actually required in your


78
00:02:08,879 --> 00:02:09,920
production bundle


79
00:02:09,920 --> 00:02:11,440
now if you want to execute some


80
00:02:11,440 --> 00:02:13,280
javascript code in the browser you can


81
00:02:13,280 --> 00:02:14,640
do that from the console


82
00:02:14,640 --> 00:02:16,400
you'll likely be using a command like


83
00:02:16,400 --> 00:02:18,480
document query selector to grab an


84
00:02:18,480 --> 00:02:19,520
element from the dom


85
00:02:19,520 --> 00:02:21,360
but web developers have always felt that


86
00:02:21,360 --> 00:02:22,640
that's way too much code


87
00:02:22,640 --> 00:02:24,560
instead use a dollar sign just like


88
00:02:24,560 --> 00:02:27,040
jquery as an alias of document query


89
00:02:27,040 --> 00:02:27,680
selector


90
00:02:27,680 --> 00:02:29,440
or grab multiple elements with a double


91
00:02:29,440 --> 00:02:31,760
dollar sign like query selector all


92
00:02:31,760 --> 00:02:33,200
or if you happen to have something


93
00:02:33,200 --> 00:02:35,200
selected in the elements tab use dollar


94
00:02:35,200 --> 00:02:37,360
sign 0 to grab the current element


95
00:02:37,360 --> 00:02:38,879
once you've grabbed an element you may


96
00:02:38,879 --> 00:02:40,800
want to see how its value changes over


97
00:02:40,800 --> 00:02:41,200
time


98
00:02:41,200 --> 00:02:42,879
you could execute the same line of code


99
00:02:42,879 --> 00:02:45,200
over and over again but a smarter option


100
00:02:45,200 --> 00:02:47,519
is to click on the eye icon to pin it to


101
00:02:47,519 --> 00:02:49,440
the console as a live expression where


102
00:02:49,440 --> 00:02:51,280
it will automatically update every time


103
00:02:51,280 --> 00:02:53,040
the application state changes


104
00:02:53,040 --> 00:02:54,800
in some cases though you may want to run


105
00:02:54,800 --> 00:02:56,560
more complex code open the command


106
00:02:56,560 --> 00:02:58,480
palette and create a new snippet you can


107
00:02:58,480 --> 00:02:59,840
write whatever javascript code you'd


108
00:02:59,840 --> 00:03:00,480
like here


109
00:03:00,480 --> 00:03:01,680
then when you open up the command


110
00:03:01,680 --> 00:03:03,760
palette again and type a bang it'll be


111
00:03:03,760 --> 00:03:04,000
there


112
00:03:04,000 --> 00:03:05,760
ready for you to execute whenever you


113
00:03:05,760 --> 00:03:07,440
need it that's pretty cool but one thing


114
00:03:07,440 --> 00:03:08,560
that can be kind of annoying


115
00:03:08,560 --> 00:03:09,840
is that when you're messing around in


116
00:03:09,840 --> 00:03:11,760
the console you might want to redeclare


117
00:03:11,760 --> 00:03:13,760
the same variable over and over again


118
00:03:13,760 --> 00:03:15,440
using const with the same name twice


119
00:03:15,440 --> 00:03:17,040
would normally produce an error but in


120
00:03:17,040 --> 00:03:18,720
the chrome console it's no problem


121
00:03:18,720 --> 00:03:20,319
because we're just messing around here


122
00:03:20,319 --> 00:03:22,080
javascript is one thing but more often


123
00:03:22,080 --> 00:03:24,159
than not i'm using the browser dev tools


124
00:03:24,159 --> 00:03:26,879
to debug my html and css if i'm


125
00:03:26,879 --> 00:03:28,640
illegally scraping a website i might


126
00:03:28,640 --> 00:03:30,159
want to go to their html


127
00:03:30,159 --> 00:03:32,400
and copy an element into my own project


128
00:03:32,400 --> 00:03:34,159
i could just copy the element with ctrl


129
00:03:34,159 --> 00:03:34,480
c


130
00:03:34,480 --> 00:03:36,480
or i can right click and get a variety


131
00:03:36,480 --> 00:03:38,400
of different copy options an especially


132
00:03:38,400 --> 00:03:39,040
useful one


133
00:03:39,040 --> 00:03:40,959
is copy selector because i can then use


134
00:03:40,959 --> 00:03:43,360
it to target an element in my css or


135
00:03:43,360 --> 00:03:45,120
javascript or if i really like the way


136
00:03:45,120 --> 00:03:47,360
an element looks i can copy its styles


137
00:03:47,360 --> 00:03:49,680
and paste them directly in my css when


138
00:03:49,680 --> 00:03:51,280
you click on an element in the dom


139
00:03:51,280 --> 00:03:53,280
it will show you all of the css styles


140
00:03:53,280 --> 00:03:55,439
that apply to it in the styles tab


141
00:03:55,439 --> 00:03:57,120
but what if you want to see the styles


142
00:03:57,120 --> 00:03:59,439
when an element is hovered or focused


143
00:03:59,439 --> 00:04:00,959
you can do that by right-clicking an


144
00:04:00,959 --> 00:04:01,439
element


145
00:04:01,439 --> 00:04:03,360
or from the styles panel you'll see the


146
00:04:03,360 --> 00:04:04,480
hov button


147
00:04:04,480 --> 00:04:06,640
to force an element state that'll cause


148
00:04:06,640 --> 00:04:08,640
the element to stay frozen in that state


149
00:04:08,640 --> 00:04:10,879
making it easier to inspect that css


150
00:04:10,879 --> 00:04:13,280
that's useful for simple transitions but


151
00:04:13,280 --> 00:04:14,000
you might also


152
00:04:14,000 --> 00:04:16,239
have complex animations on a page the


153
00:04:16,239 --> 00:04:18,479
animations panel allows you to record


154
00:04:18,479 --> 00:04:20,160
any keyframe animations that are


155
00:04:20,160 --> 00:04:21,840
happening on the screen you can scrub


156
00:04:21,840 --> 00:04:23,680
them back and forth slowly and inspect


157
00:04:23,680 --> 00:04:25,600
the actual css properties that they


158
00:04:25,600 --> 00:04:27,199
affect and is really useful for


159
00:04:27,199 --> 00:04:29,199
understanding how animations work on


160
00:04:29,199 --> 00:04:30,800
other impressive web pages


161
00:04:30,800 --> 00:04:32,560
however if you go too crazy with your


162
00:04:32,560 --> 00:04:34,080
animations it may slow down the


163
00:04:34,080 --> 00:04:35,520
rendering of the webpage


164
00:04:35,520 --> 00:04:37,520
causing jank and just an uncomfortable


165
00:04:37,520 --> 00:04:39,520
user experience the rendering panel is


166
00:04:39,520 --> 00:04:41,199
like a heads up display that helps you


167
00:04:41,199 --> 00:04:42,080
detect a variety


168
00:04:42,080 --> 00:04:43,759
of different issues before they become a


169
00:04:43,759 --> 00:04:45,600
problem if we check the box for frame


170
00:04:45,600 --> 00:04:47,520
rendering stats it will provide data


171
00:04:47,520 --> 00:04:48,960
about the frames per second


172
00:04:48,960 --> 00:04:51,520
and the total memory used on the gpu now


173
00:04:51,520 --> 00:04:53,680
css is awesome and all but the best kind


174
00:04:53,680 --> 00:04:54,160
of code


175
00:04:54,160 --> 00:04:55,520
is the code that you don't have to write


176
00:04:55,520 --> 00:04:56,960
if you're working with flexbox or


177
00:04:56,960 --> 00:04:57,680
gridlayout


178
00:04:57,680 --> 00:04:59,520
go to the layout tab and draw visual


179
00:04:59,520 --> 00:05:01,120
markers around those elements by


180
00:05:01,120 --> 00:05:02,960
checking the boxes that you want to see


181
00:05:02,960 --> 00:05:04,720
back in the styles tab if you go to the


182
00:05:04,720 --> 00:05:06,639
display property and its value is


183
00:05:06,639 --> 00:05:07,840
flexbox or grid


184
00:05:07,840 --> 00:05:09,680
you'll see an icon that you can click on


185
00:05:09,680 --> 00:05:11,360
that brings up a dialog where you can


186
00:05:11,360 --> 00:05:12,800
modify the layout without having to


187
00:05:12,800 --> 00:05:14,639
memorize a bunch of confusing css


188
00:05:14,639 --> 00:05:16,400
properties and there's also a similar


189
00:05:16,400 --> 00:05:17,919
tool for box shadows which are


190
00:05:17,919 --> 00:05:20,080
notoriously difficult to code by hand


191
00:05:20,080 --> 00:05:21,680
but if you'd rather modify your website


192
00:05:21,680 --> 00:05:23,039
with something more like an actual


193
00:05:23,039 --> 00:05:24,960
design tool check out the viz bug


194
00:05:24,960 --> 00:05:26,880
extension it allows you to interact with


195
00:05:26,880 --> 00:05:28,639
the web page itself and modify its


196
00:05:28,639 --> 00:05:30,080
appearance without knowing or


197
00:05:30,080 --> 00:05:32,720
understanding css whatsoever now your


198
00:05:32,720 --> 00:05:34,560
design may look good on your machine but


199
00:05:34,560 --> 00:05:36,000
how do you know it's responsive to


200
00:05:36,000 --> 00:05:37,120
different screen sizes


201
00:05:37,120 --> 00:05:38,560
you can find out by clicking on the


202
00:05:38,560 --> 00:05:40,560
device toolbar it provides a bunch of


203
00:05:40,560 --> 00:05:42,400
common screen sizes to choose from or


204
00:05:42,400 --> 00:05:44,000
you can use the responsive option to


205
00:05:44,000 --> 00:05:46,080
resize it yourself manually and you can


206
00:05:46,080 --> 00:05:48,000
even throttle the network speed here to


207
00:05:48,000 --> 00:05:49,440
simulate low end devices


208
00:05:49,440 --> 00:05:51,120
but the fun doesn't stop there if you're


209
00:05:51,120 --> 00:05:52,880
targeting mobile devices that use


210
00:05:52,880 --> 00:05:55,199
geolocation or motion you can simulate


211
00:05:55,199 --> 00:05:57,600
things like gps coordinates and device


212
00:05:57,600 --> 00:05:59,120
acceleration and motion


213
00:05:59,120 --> 00:06:00,639
from the sensors panel if you're


214
00:06:00,639 --> 00:06:02,160
targeting mobile users then you're


215
00:06:02,160 --> 00:06:04,000
likely building a progressive web app


216
00:06:04,000 --> 00:06:05,600
the lighthouse tool will analyze your


217
00:06:05,600 --> 00:06:06,080
website


218
00:06:06,080 --> 00:06:07,600
for performance search engine


219
00:06:07,600 --> 00:06:09,600
optimization and progressive web app


220
00:06:09,600 --> 00:06:10,240
features


221
00:06:10,240 --> 00:06:11,840
if you pass the audit it means your


222
00:06:11,840 --> 00:06:13,759
website can be installed on a mobile


223
00:06:13,759 --> 00:06:15,759
device just like a native app and if you


224
00:06:15,759 --> 00:06:17,520
fail the audit it will tell you exactly


225
00:06:17,520 --> 00:06:19,280
what you need to address in order to


226
00:06:19,280 --> 00:06:21,120
make the experience for mobile users


227
00:06:21,120 --> 00:06:22,800
better one of the most common issues is


228
00:06:22,800 --> 00:06:24,639
that a website is slow to paint the


229
00:06:24,639 --> 00:06:26,319
initial content and that's usually


230
00:06:26,319 --> 00:06:27,759
because it tries to load too much


231
00:06:27,759 --> 00:06:30,080
javascript and css you can inspect


232
00:06:30,080 --> 00:06:31,919
exactly how the browser loads all of


233
00:06:31,919 --> 00:06:33,919
your assets by going to the network tab


234
00:06:33,919 --> 00:06:35,680
it creates a waterfall graphic that


235
00:06:35,680 --> 00:06:37,440
shows every request the browser makes


236
00:06:37,440 --> 00:06:39,360
and how long it takes to fetch each one


237
00:06:39,360 --> 00:06:40,240
of those assets


238
00:06:40,240 --> 00:06:41,759
if you're worried about performance turn


239
00:06:41,759 --> 00:06:43,680
on screenshots to see how your website


240
00:06:43,680 --> 00:06:46,000
loads after each request is completed


241
00:06:46,000 --> 00:06:47,680
clicking on an individual item will


242
00:06:47,680 --> 00:06:49,919
provide a breakdown of the response body


243
00:06:49,919 --> 00:06:50,639
and headers


244
00:06:50,639 --> 00:06:52,080
and if you want to dive really deep into


245
00:06:52,080 --> 00:06:54,000
performance click on the timing panel


246
00:06:54,000 --> 00:06:55,680
it'll show you exactly how long it took


247
00:06:55,680 --> 00:06:56,639
to fetch something


248
00:06:56,639 --> 00:06:58,160
breaking down the timing all the way to


249
00:06:58,160 --> 00:06:59,840
the dns level what you didn't know


250
00:06:59,840 --> 00:07:00,160
though


251
00:07:00,160 --> 00:07:02,160
is that there's actually a server timing


252
00:07:02,160 --> 00:07:04,240
api that allows you to pass more


253
00:07:04,240 --> 00:07:05,360
detailed information


254
00:07:05,360 --> 00:07:07,360
from your server to the browser when the


255
00:07:07,360 --> 00:07:09,199
server timing header is present on a


256
00:07:09,199 --> 00:07:09,840
response


257
00:07:09,840 --> 00:07:11,280
chrome will automatically break that


258
00:07:11,280 --> 00:07:12,960
information down in the browser dev


259
00:07:12,960 --> 00:07:14,800
tools for the end user there are four


260
00:07:14,800 --> 00:07:16,800
main issues when it comes to performance


261
00:07:16,800 --> 00:07:19,520
response animation idle and load


262
00:07:19,520 --> 00:07:21,199
lighthouse and the network panel can


263
00:07:21,199 --> 00:07:21,919
help you debug


264
00:07:21,919 --> 00:07:23,919
loading issues but for the other three


265
00:07:23,919 --> 00:07:26,000
we'll need to analyze the actual runtime


266
00:07:26,000 --> 00:07:27,919
performance of our code which we can do


267
00:07:27,919 --> 00:07:29,520
in the performance panel hit the record


268
00:07:29,520 --> 00:07:30,000
button


269
00:07:30,000 --> 00:07:31,680
then start using your site like an end


270
00:07:31,680 --> 00:07:33,440
user when you end the recording


271
00:07:33,440 --> 00:07:35,599
it'll give you a breakdown of the cpu


272
00:07:35,599 --> 00:07:37,039
usage frames per second


273
00:07:37,039 --> 00:07:38,800
and the amount of memory allocated to


274
00:07:38,800 --> 00:07:40,880
the heat if you notice a spike in cpu


275
00:07:40,880 --> 00:07:41,440
usage


276
00:07:41,440 --> 00:07:43,759
a drop in frames per second or a jump in


277
00:07:43,759 --> 00:07:44,639
memory usage


278
00:07:44,639 --> 00:07:46,319
it might indicate an area of code that


279
00:07:46,319 --> 00:07:48,160
needs to be optimized to investigate


280
00:07:48,160 --> 00:07:50,080
further chrome has generated a flame


281
00:07:50,080 --> 00:07:50,479
chart


282
00:07:50,479 --> 00:07:52,240
that breaks down everything that happens


283
00:07:52,240 --> 00:07:53,759
on the browser's main thread


284
00:07:53,759 --> 00:07:55,520
in other words this is how the browser


285
00:07:55,520 --> 00:07:57,599
executes your javascript step by step


286
00:07:57,599 --> 00:07:59,360
the x-axis represents time


287
00:07:59,360 --> 00:08:01,599
and the y-axis is the call stack if the


288
00:08:01,599 --> 00:08:02,639
chart is really tall


289
00:08:02,639 --> 00:08:04,080
it's not much of a problem you might


290
00:08:04,080 --> 00:08:06,160
just be calling deeply nested functions


291
00:08:06,160 --> 00:08:08,080
but if a frame is really wide it means


292
00:08:08,080 --> 00:08:09,840
that something is taking a long time


293
00:08:09,840 --> 00:08:11,440
in which case you should click on it to


294
00:08:11,440 --> 00:08:13,120
investigate why your code sucks in more


295
00:08:13,120 --> 00:08:13,840
detail


296
00:08:13,840 --> 00:08:15,599
now in some cases the main thread might


297
00:08:15,599 --> 00:08:17,360
be fine but your code might create a


298
00:08:17,360 --> 00:08:19,440
memory leak by allocating memory to


299
00:08:19,440 --> 00:08:21,120
objects that you no longer need


300
00:08:21,120 --> 00:08:22,639
you can tell you have a memory leak when


301
00:08:22,639 --> 00:08:24,560
this blue line gets bigger and bigger


302
00:08:24,560 --> 00:08:26,240
but to investigate it further let's head


303
00:08:26,240 --> 00:08:28,479
over to the memory tab select the option


304
00:08:28,479 --> 00:08:28,800
for


305
00:08:28,800 --> 00:08:30,960
allocation instrumentation then hit the


306
00:08:30,960 --> 00:08:32,479
record button when it's done


307
00:08:32,479 --> 00:08:34,640
the blue bars indicate memory that is


308
00:08:34,640 --> 00:08:36,399
still in use while the gray bars


309
00:08:36,399 --> 00:08:37,919
indicate memory that was garbage


310
00:08:37,919 --> 00:08:38,560
collected


311
00:08:38,560 --> 00:08:40,479
at any point in time you can see every


312
00:08:40,479 --> 00:08:42,479
object that's currently allocated to the


313
00:08:42,479 --> 00:08:44,640
heap it can be sorted by size allowing


314
00:08:44,640 --> 00:08:46,720
you to figure out exactly which objects


315
00:08:46,720 --> 00:08:48,160
are clogging up your memory


316
00:08:48,160 --> 00:08:50,480
and there you have 21 techniques to try


317
00:08:50,480 --> 00:08:51,920
out and chrome dev tools


318
00:08:51,920 --> 00:08:53,680
but here's one more bonus tip to leave


319
00:08:53,680 --> 00:08:55,519
you with if you like chrome dev tools


320
00:08:55,519 --> 00:08:57,360
then you'll also like brave browser


321
00:08:57,360 --> 00:08:58,959
they don't pay me to say that it's just


322
00:08:58,959 --> 00:09:00,640
the browser that i use for most of my


323
00:09:00,640 --> 00:09:01,360
personal work


324
00:09:01,360 --> 00:09:03,120
it's based on chromium so all of the


325
00:09:03,120 --> 00:09:04,800
devtools are exactly the same


326
00:09:04,800 --> 00:09:06,880
and the ceo of the company is none other


327
00:09:06,880 --> 00:09:08,800
than brendan eick the inventor of


328
00:09:08,800 --> 00:09:09,680
javascript


329
00:09:09,680 --> 00:09:11,519
but most importantly it's privacy


330
00:09:11,519 --> 00:09:13,360
focused with built-in ad blocking


331
00:09:13,360 --> 00:09:15,200
capabilities and when it does show ads


332
00:09:15,200 --> 00:09:16,800
you actually get paid to see them that's


333
00:09:16,800 --> 00:09:17,519
pretty awesome


334
00:09:17,519 --> 00:09:18,880
but i'm going to go ahead and wrap


335
00:09:18,880 --> 00:09:20,560
things up there hit the like button and


336
00:09:20,560 --> 00:09:22,240
subscribe if you want to see more videos


337
00:09:22,240 --> 00:09:22,720
like this


338
00:09:22,720 --> 00:09:24,560
thanks for watching and i will see you


339
00:09:24,560 --> 00:09:27,600
in the next one


