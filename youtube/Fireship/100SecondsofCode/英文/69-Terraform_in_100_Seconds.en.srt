1
00:00:00,240 --> 00:00:02,879
terraform an infrastructure as code tool


2
00:00:02,879 --> 00:00:04,560
that can provision resources in the


3
00:00:04,560 --> 00:00:05,040
cloud


4
00:00:05,040 --> 00:00:07,120
from simple declarative code when


5
00:00:07,120 --> 00:00:08,639
building an app in the cloud you may


6
00:00:08,639 --> 00:00:10,559
find yourself using the graphical user


7
00:00:10,559 --> 00:00:12,000
interface of your favorite cloud


8
00:00:12,000 --> 00:00:12,559
provider


9
00:00:12,559 --> 00:00:14,240
clicking on buttons and paying for


10
00:00:14,240 --> 00:00:15,599
products just like you would on an


11
00:00:15,599 --> 00:00:17,279
e-commerce site the only drawback of


12
00:00:17,279 --> 00:00:19,039
this approach is that it's complete and


13
00:00:19,039 --> 00:00:20,880
total chaos you might click a thousand


14
00:00:20,880 --> 00:00:22,320
different buttons to get your vm


15
00:00:22,320 --> 00:00:23,439
configured properly


16
00:00:23,439 --> 00:00:24,560
but what happens when you need to


17
00:00:24,560 --> 00:00:26,080
reproduce the same thing again in the


18
00:00:26,080 --> 00:00:26,480
future


19
00:00:26,480 --> 00:00:28,960
terraform provides a way to build change


20
00:00:28,960 --> 00:00:30,480
and version infrastructure


21
00:00:30,480 --> 00:00:32,640
safely and efficiently by representing


22
00:00:32,640 --> 00:00:33,760
your infrastructure


23
00:00:33,760 --> 00:00:35,760
and all that settings with the hashicorp


24
00:00:35,760 --> 00:00:37,840
configuration language or optionally


25
00:00:37,840 --> 00:00:39,760
json think of it like a human readable


26
00:00:39,760 --> 00:00:41,680
blueprint that can execute and


27
00:00:41,680 --> 00:00:43,600
automate everything you do in the cloud


28
00:00:43,600 --> 00:00:45,120
it's free and open source


29
00:00:45,120 --> 00:00:46,879
and the first step to get started is to


30
00:00:46,879 --> 00:00:49,039
install the cli on your local system


31
00:00:49,039 --> 00:00:51,039
then from your project create a file


32
00:00:51,039 --> 00:00:52,399
ending in tf


33
00:00:52,399 --> 00:00:54,239
at the top we have a terraform block


34
00:00:54,239 --> 00:00:55,920
that controls global settings for


35
00:00:55,920 --> 00:00:56,879
terraform itself


36
00:00:56,879 --> 00:00:58,960
most importantly we can define providers


37
00:00:58,960 --> 00:01:00,640
here which are like plugins that can


38
00:01:00,640 --> 00:01:02,320
connect to different cloud providers


39
00:01:02,320 --> 00:01:03,359
like aws


40
00:01:03,359 --> 00:01:05,920
google cloud azure etc below that we


41
00:01:05,920 --> 00:01:07,680
have a provider block which gives


42
00:01:07,680 --> 00:01:09,600
terraform the necessary credentials to


43
00:01:09,600 --> 00:01:11,280
connect to our google cloud account


44
00:01:11,280 --> 00:01:13,119
from there we can create actual cloud


45
00:01:13,119 --> 00:01:15,439
infrastructure using a resource block it


46
00:01:15,439 --> 00:01:17,680
takes a type as its first argument which


47
00:01:17,680 --> 00:01:20,000
corresponds to a product on google cloud


48
00:01:20,000 --> 00:01:22,159
then a custom name to identify it as the


49
00:01:22,159 --> 00:01:23,040
second argument


50
00:01:23,040 --> 00:01:24,720
inside the block we can customize the


51
00:01:24,720 --> 00:01:26,400
settings of the resource like its


52
00:01:26,400 --> 00:01:27,280
machine type


53
00:01:27,280 --> 00:01:29,360
zone and anything else you can imagine


54
00:01:29,360 --> 00:01:30,960
now that our infrastructure is defined


55
00:01:30,960 --> 00:01:33,200
as code we can run terraform init to


56
00:01:33,200 --> 00:01:34,400
initialize the project


57
00:01:34,400 --> 00:01:36,720
then terraform apply to make the actual


58
00:01:36,720 --> 00:01:38,240
changes to google cloud


59
00:01:38,240 --> 00:01:39,840
it'll require a confirmation before


60
00:01:39,840 --> 00:01:41,520
making the changes then after it's


61
00:01:41,520 --> 00:01:42,079
complete


62
00:01:42,079 --> 00:01:43,840
the terraform show command can be used


63
00:01:43,840 --> 00:01:45,360
to inspect the current state of the


64
00:01:45,360 --> 00:01:46,799
infrastructure what's awesome


65
00:01:46,799 --> 00:01:48,799
is that as we add more resources to the


66
00:01:48,799 --> 00:01:50,880
configuration terraform keeps track of


67
00:01:50,880 --> 00:01:52,159
the changes or diff


68
00:01:52,159 --> 00:01:54,240
similar to a version control system like


69
00:01:54,240 --> 00:01:56,479
git just run terraform apply again to


70
00:01:56,479 --> 00:01:58,719
deploy any changes to the configuration


71
00:01:58,719 --> 00:02:00,399
now once your startup has failed and it


72
00:02:00,399 --> 00:02:02,240
comes time to tear down the project


73
00:02:02,240 --> 00:02:04,320
use the terraform destroy command as the


74
00:02:04,320 --> 00:02:06,479
inverse of apply to delete everything in


75
00:02:06,479 --> 00:02:08,239
your configuration file this has been


76
00:02:08,239 --> 00:02:09,200
infrastructure as


77
00:02:09,200 --> 00:02:11,599
code with terraform in 100 seconds make


78
00:02:11,599 --> 00:02:12,959
sure to hit the like button if you want


79
00:02:12,959 --> 00:02:14,560
to see more short videos like this


80
00:02:14,560 --> 00:02:16,480
thanks for watching and i will see you


81
00:02:16,480 --> 00:02:19,200
in the next one


