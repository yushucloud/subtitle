1
00:00:00,799 --> 00:00:05,759
redis an in-memory multi-model database famous for its sub-millisecond latency
redis 是一个内存中的多模型数据库，以其亚毫秒级延迟而闻名。

2
00:00:05,759 --> 00:00:11,280
it was created in 2009 based on the idea that a cache can also be a durable data
它创建于 2009 年，基于这样一种想法，即缓存也可以是一个持久的数据

3
00:00:11,280 --> 00:00:13,360
store around this time apps like twitter were
存储，大约在这个时候，像 twitter 这样的应用程序

4
00:00:13,360 --> 00:00:16,880
growing exponentially and needed a way to deliver data to their end users
呈指数级增长，需要一种交付方式 向最终用户发送数据的

5
00:00:16,880 --> 00:00:19,039
faster than a relational database could handle
速度比关系数据库处理

6
00:00:19,039 --> 00:00:22,720
redis which means remote dictionary server was adopted by some of the most
redis 的速度更快，这意味着远程字典服务器被世界上一些流量最大的

7
00:00:22,720 --> 00:00:26,160
heavily trafficked sites in the world because it changed the database game by
网站采用，因为它通过

8
00:00:26,160 --> 00:00:30,560
creating a system where data is always modified or read from the main computer
创建一个始终修改或读取数据的系统改变了数据库游戏 主计算机

9
00:00:30,560 --> 00:00:33,360
memory as opposed to the much slower disk but
内存而不是慢得多的磁盘，但

10
00:00:33,360 --> 00:00:36,239
at the same time it stores its data on the disk so it can
同时它将其数据存储在磁盘上，因此可以根据需要对其

11
00:00:36,239 --> 00:00:39,120
be reconstructed as needed which means the database is
进行重建，这意味着数据库是

12
00:00:39,120 --> 00:00:43,120
fully durable supporting things like snapshots and backups every data point
完全持久的，支持快照和备份之类的东西

13
00:00:43,120 --> 00:00:46,640
in the database is a key followed by one of many different data
数据库中的每个数据点都是 键后跟许多不同的数据结构之一，

14
00:00:46,640 --> 00:00:50,480
structures like a string list hash or stream so you can store
例如字符串列表哈希或流，因此

15
00:00:50,480 --> 00:00:53,760
data naturally just like you would with your favorite programming language as
您可以像使用您的收藏一样自然地存储数据

16
00:00:53,760 --> 00:00:57,280
opposed to squeezing it into a bunch of tables or json documents
与将其压缩成一堆表或 json 文档相比

17
00:00:57,280 --> 00:01:00,640
interacting with the database is handled with a simple set of commands
，与数据库交互的编程语言是通过一组简单的命令来处理的，

18
00:01:00,640 --> 00:01:04,320
like set followed by a key and value to create data
例如 set 后跟一个键和值来创建数据，

19
00:01:04,320 --> 00:01:08,000
then git followed by a key to read data historically
然后 git 后跟一个键来读取历史数据

20
00:01:08,000 --> 00:01:12,240
redis has been described as a key value store and is often used as a cache to
redis 已被描述为键值存储，并且通常用作缓存以

21
00:01:12,240 --> 00:01:14,640
make relational databases faster at scale
使关系数据库在规模上更快，

22
00:01:14,640 --> 00:01:18,640
but here's where your mind is about to be blown redis is perfectly suitable as
但在这里你的想法即将被吹走 redis 非常适合

23
00:01:18,640 --> 00:01:21,759
a primary database and can dramatically reduce complexity
作为主数据库，并且可以显着降低复杂性，

24
00:01:21,759 --> 00:01:25,439
because making things go fast at scale is the primary cause of complexity in
因为让事情变得更快 大规模是复杂性的主要原因

25
00:01:25,439 --> 00:01:28,799
the first place with redis your database is already fast
首先使用 redis 你的数据库已经很快了

26
00:01:28,799 --> 00:01:32,240
no need for a complex caching layer but you might be wondering
不需要复杂的缓存层但是你可能想

27
00:01:32,240 --> 00:01:35,840
how do i model complex relationships today redis is what you would call
知道我今天如何建模复杂的关系redis 就是你所说

28
00:01:35,840 --> 00:01:39,759
a multi-model database supporting a variety of different database paradigms
的多模型数据库支持 带有附加模块的各种不同的数据库范例

29
00:01:39,759 --> 00:01:42,240
with add-on modules that you can opt into as
，

30
00:01:42,240 --> 00:01:45,600
needed if your data contains relationships bring in redis graph
如果您的数据包含关系，您可以根据需要选择加入 是图形

31
00:01:45,600 --> 00:01:49,759
and query it with cipher or use the json module to structure your data as a
并使用密码查询它，或者使用 json模块将您的数据结构化为

32
00:01:49,759 --> 00:01:52,799
hierarchy just like a document-oriented database
层次结构，就像面向文档的数据库一样，

33
00:01:52,799 --> 00:01:55,920
then use the search module to turn your database into a full text
然后使用搜索模块将您的数据库变成全文

34
00:01:55,920 --> 00:02:00,000
search engine and it even has modules for ai workloads time series data
搜索引擎，它甚至还有用于 AI 工作负载时间的模块 系列数据

35
00:02:00,000 --> 00:02:03,920
and more the quickest way to get started is the free tier on redis enterprise
等 最快的入门方式是 redis 企业云上的免费层，

36
00:02:03,920 --> 00:02:07,280
cloud that'll give you a free database to play around with and you can attach
它会给你一个免费的数据库来玩，你可以附加

37
00:02:07,280 --> 00:02:11,200
one extra module to it then you can connect to it with the redis cli or with
一个额外的模块，然后你可以使用 redis cli 连接到它或

38
00:02:11,200 --> 00:02:14,959
the redis insight tool which contains an interactive dashboard to manage your
使用 redis 洞察工具，其中包含一个交互式仪表板来管理您的

39
00:02:14,959 --> 00:02:19,200
data this has been redis in 100 seconds but what do you guys think would you use
数据，这在 100 秒内就是 redis，但是你们认为您会使用

40
00:02:19,200 --> 00:02:22,080
redis as your primary database let me know why or why not
redis 作为您的主数据库吗？让我知道为什么或为什么

41
00:02:22,080 --> 00:02:27,680
in the comments thanks for watching and i will see you in the next one
不在评论中感谢您的观看，我 下一篇见