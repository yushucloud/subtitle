1
00:00:02,080 --> 00:00:06,319
javascript是一种基于原型的高级单线程

2
00:00:06,319 --> 00:00:11,679
垃圾回收解释和即时编译的具有非阻塞循环事件

3
00:00:09,679 --> 00:00:14,719
的多范式动态语言，因构建网站而闻名

4
00:00:14,719 --> 00:00:18,240
它是由Brendan Eich 95年在一周内于创建的

5
00:00:18,240 --> 00:00:21,920
其目的是在网景浏览器中添加一种易学的脚本语言

6
00:00:21,920 --> 00:00:27,439
期初初被命名为Mocha，但精明的销售希望它像一种新的性感java语言

7
00:00:27,439 --> 00:00:29,880
在今天它是一种功能齐全的语言

8
00:00:29,880 --> 00:00:32,320
它通过ECMAScript标准继续发展

9
00:00:32,320 --> 00:00:36,440
因为它是除Web程序集之外唯一支持浏览器原生的语言

10
00:00:36,440 --> 00:00:41,640
但是任何可以用javascript构建的东西都将用javascript构建

11
00:00:41,640 --> 00:00:45,320
例如带有 node.js 的服务器端应用程序和

12
00:00:45,320 --> 00:00:47,680
带有React 的移动应用程序

13
00:00:47,680 --> 00:00:51,440
以及electron桌面应用，它是一种解释性脚本语言

14
00:00:51,440 --> 00:00:55,440
v8引擎和 chromium 等工具使用编译器在运行时将其转换为机器码

15
00:00:55,440 --> 00:00:59,840
它在处理IO密集型作业方面也非常出色，

16
00:00:59,840 --> 00:01:03,520
尽管它是通过非阻塞事件实现的单线程语言

17
00:01:03,520 --> 00:01:06,880
在后台排队工作而不阻塞主线程

18
00:01:06,880 --> 00:01:11,280
开始创建一个js文件,您的代码将从全局上下文

19
00:01:11,280 --> 00:01:15,480
开始执行使用控制台和用内置调试器记录一个值

20
00:01:15,480 --> 00:01:19,680
现在想想你想在哪里运行这个文件,是前端浏览器

21
00:01:19,680 --> 00:01:22,720
还是浏览器中的后端node.js服务器

22
00:01:22,720 --> 00:01:26,400
您可以使用标签引用它，然后在浏览器上

23
00:01:26,400 --> 00:01:30,560
打开文件执行,javascript通常从 Dom 文档中抓取一个元素

24
00:01:30,560 --> 00:01:34,000
查询选择器会抓取一个按钮，然后我们可以

25
00:01:34,000 --> 00:01:38,240
使用 var let 或const分配一个变量,但通常不使用let

26
00:01:38,240 --> 00:01:42,079
分配新的变量，而 const 无法重新分配新的变量

27
00:01:42,079 --> 00:01:45,680
现在要使按钮具有交互性，可以为onClick

28
00:01:45,680 --> 00:01:49,520
事件定义一个函数来为其添加一个事件侦听器

29
00:01:49,520 --> 00:01:53,520
我们可以使用 function 关键字或更简洁的箭头函数

30
00:01:53,520 --> 00:01:57,040
现在只要点击事件发送，就会循环执行它，

31
00:01:57,040 --> 00:02:00,560
函数是支持函数式编程模式的第一类对象

32
00:02:00,560 --> 00:02:04,880
但 Javascript 也支持面向对象模式的类和继承，

33
00:02:04,880 --> 00:02:09,080
即使它是单线程的，它也可以使用 Promise api 异步工作，

34
00:02:09,080 --> 00:02:13,200
它也支持 async await 语法,node js可以让

35
00:02:13,200 --> 00:02:16,959
js代码在服务器上运行，不止是网页上的按钮

36
00:02:16,959 --> 00:02:21,159
它与文件系统api之类的东西交互，通过拉起终端

37
00:02:21,159 --> 00:02:24,598
在服务器上输入节点命令来执行你的代码

38
00:02:24,598 --> 00:02:27,280
这是Javascript100秒简介

39
00:02:27,280 --> 00:02:30,480
谢谢，下次见