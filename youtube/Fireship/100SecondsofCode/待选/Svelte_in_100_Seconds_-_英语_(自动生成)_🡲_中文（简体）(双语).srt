1
00:00:00,080 --> 00:00:04,080
svelt it's a javascript tool for building ui components just like react
svelt 它是一个 javascript 工具，用于构建 ui 组件，就像 react

2
00:00:04,080 --> 00:00:08,000
angular or vue but unlike its peers would ship a javascript runtime to the
angular 或 vue 一样，但与它的同行不同，它会向浏览器发送一个 javascript 运行时

3
00:00:08,000 --> 00:00:11,679
browser to make your code work svelte is a compiler it converts the
以使您的代码工作svelte 是一个编译器，

4
00:00:11,679 --> 00:00:14,080
declarative code that you'd love to write as a developer
它将您喜欢编写的声明性代码转换为 开发人员

5
00:00:14,080 --> 00:00:17,279
into imperative code that works with native browser apis
转换为与本机浏览器 api

6
00:00:17,279 --> 00:00:20,800
as a result you get highly performant code in a very small package
一起使用的命令式代码，因此您可以在一个非常小的包中获得高性能代码，

7
00:00:20,800 --> 00:00:23,920
but most importantly it's the only javascript framework that's actually
但最重要的是，它是唯一真正

8
00:00:23,920 --> 00:00:26,800
enjoyable to use
令人愉快的 JavaScript 框架

9
00:00:27,519 --> 00:00:31,439
we create components in dot spelled files which contain three main parts
我们在点拼写文件中创建组件，其中包含三个主要部分

10
00:00:31,439 --> 00:00:34,800
a script for your javascript code which can also be typescript
一个脚本 对于您的 javascript 代码，也可以是 typescript

11
00:00:34,800 --> 00:00:39,440
a style tag for your css which can also use a preprocessor like sas and the main
您的 css 的样式标记，它也可以使用像 sas 这样的预处理器和

12
00:00:39,440 --> 00:00:44,160
template represented as regular html but it's no ordinary html it's been
表示为常规 html 的主模板，但它不是普通的 html，它被

13
00:00:44,160 --> 00:00:47,600
empowered with all kinds of extra syntax for writing declarative code
赋予了编写声明性代码

14
00:00:47,600 --> 00:00:51,360
need reactive state simply define a variable with the let keyword then
所需的各种额外语法 反应状态只需使用 let 关键字定义一个变量，然后

15
00:00:51,360 --> 00:00:55,280
reference it dynamically in the html using braces if we want to change the
在 html 中使用大括号动态引用它，如果我们 想要改变

16
00:00:55,280 --> 00:00:58,000
state we can do that by defining a function then listen
状态，我们可以通过定义一个函数来做到这一点，然后

17
00:00:58,000 --> 00:01:02,000
to an event in the dom with on and bind the function to it as the handler
在 dom 中使用 on 监听一个事件，并将函数绑定到它作为处理程序，

18
00:01:02,000 --> 00:01:05,600
now when the value of that variable changes the component will automatically
现在当该变量的值发生更改时，组件将自动

19
00:01:05,600 --> 00:01:09,119
re-render to show the updated state in many cases you'll need to run
重新渲染以显示在许多情况下，更新状态需要在模板中运行

20
00:01:09,119 --> 00:01:11,360
conditional logic or loops in your template
条件逻辑或循环，

21
00:01:11,360 --> 00:01:14,960
instead of fighting against javascript functions it empowers you with a syntax
而不是与 javascript函数对抗

22
00:01:14,960 --> 00:01:17,200
where you can clearly create an if else statement


23
00:01:17,200 --> 00:01:20,400
or a for each loop when working with a list now when it comes to
当涉及到

24
00:01:20,400 --> 00:01:23,280
cross-component communication spelt provides multiple different
跨组件通信时，拼写提供了多种不同的

25
00:01:23,280 --> 00:01:27,360
strategies for sharing data between components to pass data from a parent to
策略来在组件之间共享数据以将数据从父级传递给

26
00:01:27,360 --> 00:01:31,439
child you can use props by adding the export keyword to a variable and now you
子级，您可以通过将export 关键字添加到变量来使用道具，现在您

27
00:01:31,439 --> 00:01:34,479
can pass data into this component and if you have a ton of props you can
可以将数据传递到该组件中，如果您 拥有大量道具，您可以

28
00:01:34,479 --> 00:01:37,840
use the spread syntax to keep your code looking fit and healthy
使用扩展语法来保持您的代码

29
00:01:37,840 --> 00:01:42,000
now for more complex component trees you have a context api just like react
现在看起来合适和健康，对于更复杂的组件树，您有一个上下文 api，就像 react

30
00:01:42,000 --> 00:01:46,000
and if that wasn't enough spelt also has a really nice mechanism called stores
和 i 拼写不够的 f 还有一个非常好的机制，称为 stores

31
00:01:46,000 --> 00:01:49,360
which are like observables that can be shared anywhere in the component tree
，它就像 observables，可以在组件树中的任何位置共享

32
00:01:49,360 --> 00:01:52,640
and subscribed to in the template by putting a dollar sign in front of them
，并

33
00:01:52,640 --> 00:01:56,479
after you've built an awesome ui you can then use the compiler to convert it to
在你构建了一个很棒的之后通过在它们前面放置一个美元符号来订阅模板 ui 然后您可以使用编译器将其转换为

34
00:01:56,479 --> 00:01:59,040
vanilla javascript and if you're building a full-blown web
vanilla javascript，如果您正在构建一个成熟的 Web

35
00:01:59,040 --> 00:02:02,880
application you can use spelt kit to quickly implement server-side rendering
应用程序，您可以使用拼写套件快速实现服务器端渲染

36
00:02:02,880 --> 00:02:06,479
routing and code splitting this has been spelt in 100 seconds
路由和代码拆分，这已在 100 秒内

37
00:02:06,479 --> 00:02:09,840
hit the like button if you want to see more thanks for watching and i will see
拼写完成 喜欢按钮，如果你想看到更多感谢收看，我会

38
00:02:09,840 --> 00:02:13,120
you in the next one
在下一个看到你