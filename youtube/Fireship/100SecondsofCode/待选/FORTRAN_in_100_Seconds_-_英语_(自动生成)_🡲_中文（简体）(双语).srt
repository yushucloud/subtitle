1
00:00:00,000 --> 00:00:03,919
fortran a compiled imperative programming language famous as the first
fortran 一种已编译的命令式编程语言，以

2
00:00:03,919 --> 00:00:07,919
ever high-level language designed for humans it was developed in the 1950s at
有史以来第一个为人类设计的高级语言而闻名，它是 1950 年代在 ibm 开发的，

3
00:00:07,919 --> 00:00:13,200
ibm by john bakkus a guy who was too lazy to write assembly for the ibm 704
由 johnbakkus 开发

4
00:00:13,200 --> 00:00:16,160
mainframe computer the haters said it would never be as performant as
与

5
00:00:16,160 --> 00:00:21,119
hand-coded programs but by 1957 formula translator became the first computer
手动编码程序一样高效，但到 1957 年，公式翻译器成为第一个计算机

6
00:00:21,119 --> 00:00:25,199
language standard at the time computers were extremely rare but fortran was a
语言标准，当时计算机极为罕见，但 fortran 是一项

7
00:00:25,199 --> 00:00:28,560
huge technical breakthrough because for the first time ever people outside the
巨大的技术突破，因为计算机科学领域以外的人第一次

8
00:00:28,560 --> 00:00:31,920
computer science realm could actually use a computer most importantly the
可以真正使用计算机 最重要的是，该

9
00:00:31,920 --> 00:00:35,280
language implemented the first optimizing compiler which was able to
语言实现了第一个优化编译器，它能够

10
00:00:35,280 --> 00:00:38,879
produce machine code just as fast as anything coded by hand the language has
像任何手工编码一样快速生成

11
00:00:38,879 --> 00:00:42,239
evolved into many different versions over the years and is still in use today


12
00:00:42,239 --> 00:00:45,760
primarily for heavy duty number crunching and scientific computing when
机器码 当

13
00:00:45,760 --> 00:00:49,360
your grandma wrote fortran back in the 70s she didn't have access to fancy
你的祖母在 70 年代写 fortran 时，她无法获得幻想

14
00:00:49,360 --> 00:00:53,039
tools like editors and terminals and instead wrote her code on a punch card
像编辑器和终端这样的工具，而是将她的代码写在一张穿孔卡片上，

15
00:00:53,039 --> 00:00:56,559
each card represents one line of code and is kept neatly in a stack where it
每张卡片代表一行代码，并整齐地保存在堆栈中，

16
00:00:56,559 --> 00:01:00,320
can then be fed into a card reader to be compiled the modern developer can get
然后可以将其输入读卡器进行编译现代开发人员可以

17
00:01:00,320 --> 00:01:04,400
started by installing the fortran compiler then create a file ending in f
通过安装 fortran编译器然后创建一个以 f 或 f95 结尾的文件

18
00:01:04,400 --> 00:01:09,680
or f95 to specify a certain version like fortran 95 use the program keyword to
以指定某个版本，例如fortran 95 使用 program 关键字

19
00:01:09,680 --> 00:01:13,439
give your app a name in older versions keywords used all caps because the shift
为您的应用程序命名在旧版本中关键字使用全部大写，因为

20
00:01:13,439 --> 00:01:17,520
key didn't exist on punch card machines until the 1970s declare variables by
在穿孔卡机器上不存在 shift 键，直到 1970 年代通过

21
00:01:17,520 --> 00:01:21,680
starting with a type followed by a name and optionally a default value any
以类型开头，后跟名称和可选的默认值来声明变量 任何

22
00:01:21,680 --> 00:01:25,759
variable names that start with ijklmn will automatically be considered
以 ijklmn 开头的变量名称都将自动被视为

23
00:01:25,759 --> 00:01:29,680
integers to disable this ancient feature use the implicit nun directive at the
整数以禁用此古老功能在顶部使用隐式 nun 指令

24
00:01:29,680 --> 00:01:33,280
top use the character type to create a string by declaring it with a fixed
使用字符类型创建字符串 通过使用固定的最大长度声明它，

25
00:01:33,280 --> 00:01:37,040
maximum length now print that value to the standard output using the executable
现在使用

26
00:01:37,040 --> 00:01:41,280
statement of print star in addition the dimension keyword can be used to create
print star 的可执行语句以及维度键将该值打印到标准输出 word 可用于创建

27
00:01:41,280 --> 00:01:44,880
an array of numbers and multiple dimensions will create a matrix just be
一个数字数组，多个维度将创建一个矩阵，请

28
00:01:44,880 --> 00:01:48,240
careful not to allocate too much memory because your apple ii only has four
注意不要分配太多内存，因为您的 apple ii 只有 4

29
00:01:48,240 --> 00:01:51,680
kilobytes of ram early versions of the language didn't perform fine-grained
KB ram 早期版本的语言没有执行细粒度的

30
00:01:51,680 --> 00:01:55,439
memory management but modern versions support pointers that can manually
内存管理 但是现代版本支持可以手动

31
00:01:55,439 --> 00:01:59,200
allocate and de-allocate memory but the real killer feature of fortran when it
分配和取消分配内存的指针，但是fortran 在 50 年代问世时真正的杀手级功能是

32
00:01:59,200 --> 00:02:03,280
came out in the 50s is the ability to perform loops perform loose perform


33
00:02:03,280 --> 00:02:07,520
loose the do and do while loops made it relatively easy for anybody to tell a
能够执行循环 告诉

34
00:02:07,520 --> 00:02:11,520
computer how to do something multiple times on top of that fortran also made
计算机如何在该 fortran 之上多次执行某事还使

35
00:02:11,520 --> 00:02:15,680
code reusable with procedures a function procedure takes immutable arguments
代码可与过程重用函数过程接受不可变参数

36
00:02:15,680 --> 00:02:19,280
performs some kind of calculation then returns a value it can be called with
执行某种计算然后返回一个值它可以

37
00:02:19,280 --> 00:02:22,959
its name elsewhere in the code a subroutine is another type of procedure
在代码中的其他地方使用其名称调用子例程是 另

38
00:02:22,959 --> 00:02:27,040
which can take mutable arguments but does not provide a return value now use
一种可以接受可变参数但不提供返回值的过程现在使用

39
00:02:27,040 --> 00:02:30,160
your favorite implementation of the compiler to convert your code into an
您最喜欢的c 实现 编译器将您的代码转换为

40
00:02:30,160 --> 00:02:34,160
executable binary this has been fortran and 100 seconds let me know if you want
可执行的二进制文件，这已经是 fortran和 100 秒，如果您想

41
00:02:34,160 --> 00:02:37,599
to see a full tutorial in the comments thanks for watching and i will see you
在评论中看到完整的教程，请告诉我谢谢观看，我会

42
00:02:37,599 --> 00:02:40,800
in the next one
在下一个