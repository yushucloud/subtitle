1
00:00:00.000 --> 00:00:03.319
the single worst moment of my life was the moment i was born i wish that were true but as a software engineer i've experienced far worse things during technical interviews

if you're lucky enough to survive tutorial hell before the age of 25 and find a way to impress the algorithms that automatically read your resume you get dropped into a high-stakes life or death game with a six-figure salary on one side and orbeez on the other you can tell yourself the interview process is broken and maybe it is but like most things in life you can't control it and just have to play the game in today's video you will experience the psychological rollercoaster ride that is the technical interview along the way you'll learn the secrets to high pressure problem solving on the spot and how to impress the interviewer even if you totally suck at writing code to make this hyper-realistic i've invited a special guest who's conducted hundreds of interviews in the real world let the story begin it's been a long difficult year of hashtag learn to code i've turned down dates with beautiful women stopped doing flat earth research and even cancelled netflix all for the opportunity to stare at a computer screen for the rest of my life thanks to this awesome video i watched on youtube i finally landed an interview with big scary tech corporation i've got dozens of leak code questions and a bunch of half finished udemy courses under my belt nothing can stand in my way now i'm about to jump on this call and change my life forever hello mr fireship my name is the primes in welcome to hell welcome to hell i'm just kidding i'll be conducting your interview today you know let's just get straight into it i'm going to ask you actually a classic question it's called fizzbuzz i want you to print out numbers 1 through 100 but if it's divisible by 3 i want you to print out fizz if a number is divisible by 5 please print out buzz but if it's divisible by both 3 and 5 please print out fizz and buzz fizzbuzz how cliche is that i mean i just built my own compiler in javascript last night this is too easy wait a minute i have no idea what i'm doing here hash map link list mom mom why am i so dumb wait directed graph i i can't do it i'm just going to tell them i can't do it binary tree i'm an imposter i'm blacking out a few moments later uh mr fireship before we write any code uh let's just talk about the problem how would you kind of approach a problem like this you know what i think i've already failed this interview which means i don't care anymore and magically when i stop caring the anxiety goes away screw the code let's just talk about the problem okay so it looks like we have three conditions here and when we have conditions we use a conditional statement like if one way i could represent this is with a flowchart on a whiteboard or if that's not an option i might start by writing some pseudocode because i don't want to worry about syntax or boilerplate before i even know what i'm going to implement for each iteration of a loop we have a number if it's divisible by 3 and 5 we print fizzbuzz otherwise if it's divisible by 3 we print fizz or if it's divisible by 5 we print buzz and finally just print the number if none of these are true wow so this is actually a very simple problem when we take the time to break it down i was totally overthinking it i was expecting something with a really complex solution because this is big scary tech corporation after all you know i can't give you the answers but i do really want to see you succeed so feel free to ask questions as we go along that solution looks pretty good so how would you take that and turn it into code i'm most comfortable in javascript so i'll go ahead and use that for the implementation first we'll need a loop that iterates 100 times as i'm writing this code i'm not thinking about getting things done quickly but rather i'm taking my time and making sure i fully understand the requirements before wasting my time writing a bunch of code that i'll have to correct later what's really important is that i think out loud and explain my decisions throughout the process normally i like to use four each for loops but in this case i'm going to use a traditional for loop and not four each because i happen to know that four will result in better performance now even if what i'm saying isn't totally correct it's important for the interviewer to understand my problem-solving process saying something is almost always better than saying nothing at all unless of course you say some dumb ass in which case it may be optimal to just shut the [ __ ] up before you set foot into the thunderdome you should practice literally saying everything out loud as you solve a problem personally i hate talking while i write code and it just takes a lot of practice to get comfortable with this follow the abc rule i just made up which doesn't mean always be coding but always be chatting another tip is that if you get confused and freeze up don't just sit there but try to come up with a question the longer you sit there and stare at the headlights the more likely you are to lose your composure can't have anyone freak out out there okay we've gotta keep our composure we've gone too far there's too much to lose composure i'm a little confused here so i might ask a question like should the program take an input and return an answer for a specific index or should it always iterate over all 100 answers good question a loop is just fine now i feel like i'm going in the right direction so what i'll do next is create a few conditional statements that line up to what i sketched out on the whiteboard now the tricky thing about fizzbuzz is determining if one number is a multiple of another number i guess i could divide by the target number and if it's an integer it's a match but if it's a decimal then it's not a match that should work so when it's 3 will log fizz when it's 5 will lock buzz but if it's false on both of these then we'll just console log the number yeah i think that looks good let's go ahead and use bun to run it just to show off my knowledge of blazingly fast javascript tooling and yes it works perfectly i'm a goddamn genius interesting what can you do without magical type conversion do you know what modulo is ah man he's not impressed at all i'm such a loser modulo i've never even heard that word in my life oh wait are you talking about the remainder operator in javascript yeah you do have the modulo operator correct why don't you give it a try yeah that would make more sense here what it does is give us the remainder when doing division so if that number is 0 then we know that it's a multiple of whatever number we're trying to divide by that gives us a solution that isn't so dependent on the loosely type nature of javascript it's usually a good idea to avoid language specific magic the interviewer might be a c developer with 50 years of experience who's going to think your clever little javascript tricks are mid af the modulo operator is available in basically every language so it's best to stick with that this is looking pretty good but can you make fizzbuzz print on a single line oh yeah that's kind of not correct is it okay i think i have an idea but i remember reading this article that's messing with my head right now that said the else keyword is an anti-pattern maybe i should stop believing everything i read on the internet let's give it a try and talk through it we'll first check for the fizz buzz condition then use if else a couple times to check for fizz and buzz and then finally we'll use else to log the number itself not only does this put fizz buzz on a single line but the code is just more simple now in fact i don't think it can get any better oh that looks correct now what happened if i wanted to add some more conditions let's say 7 is bass how are you going to deal with that ah man i knew it else statements really are garbage always believe everything you read on the internet it's never failed me when you have a lot of conditions to check one thing you generally want to do is try to extract the data out of that statement we can easily do that here by defining a variable for the thing we want to print now we could set up a switch statement to check all the different conditions but i think using if is just as good if not better as you can see here i have github copilot enabled but let's just keep that on the download because i really need this job now instead of console logging here we'll just mutate the variable this allows us to eliminate the fizz buzz check and can also scale better if we decide to add additional words to it impressive very nice impressively very nice blazingly correct now how would you describe the performance of your algorithm i would describe it as strong to quite strong as you can see when i run it there's almost no lag time because my holistic approach is so blazingly fast well that's one way to describe it i was more talking about big o time complexity oh yeah i guess i should have studied big o a little better before doing this interview if the fizzbuzz game were to go on forever i'd say we have linear time complexity or o of n however technically the game is only played for 100 steps which would simplify down to 01 or constant time wow i can't believe it's been an hour already i blacked out where the hell am i is this heaven oh hey congratulations you've got the job here's your offer sheet with a 400 000 salary and the job is fully remote with unlimited vacation time your first task you'll be working on is changing all of the blue buttons to a slightly different color blue wow i can't believe it i've spent the last two years pouring my blood sweat and tears into this and my mom is going to be so proud hold on just one second [Music] uh it looks like we've just implemented a hiring freeze um i'm gonna have to rescind that offer congratulations now you know how to bomb your technical interview just like me make sure to subscribe to the primogen for more awesome developer content thanks for watching and i will see you in the next one
我生命中最糟糕的时刻是我出生的那一刻，我希望这是真的，但作为一名软件工程师，如果你有幸在 25 岁之前熬过教程地狱并找到一种打动自动阅读简历的算法的方法 你陷入了一场高风险的生死游戏，一边是六位数的薪水，一边是 orbeez但是就像生活中的大多数事情一样，您无法控制它，只需要在今天的视频中玩游戏，您将体验心理过山车，这是技术面试，一路上您将学习解决高压问题的秘诀现场以及如何给面试官留下深刻印象，即使你完全不擅长编写代码以使这个超现实我已经邀请了一位在现实世界中进行了数百次采访的特邀嘉宾让故事开始它已经很长时间了g 艰难的一年标签 学习编码 我拒绝了与美女约会youtube 我终于得到了一个可怕的大型科技公司的采访我有几十个泄漏代码问题和一堆半完成的 udemy 课程我的腰带没有什么可以阻挡我现在我即将加入这个电话并改变我的永远的生命你好，火船先生，我的名字是素数欢迎来到地狱欢迎来到地狱我只是在开玩笑我今天将进行你的采访你知道让我们直接进入它我要问你一个经典的问题它是称为 fizzbuzz 我希望你打印出数字 1 到 100 但如果它可以被 3 整除我希望你打印出 fizz 如果一个数字可以被 5 整除请打印出嗡嗡声但如果它可以被 3 和 5 整除请打印出 fizz 和嗡嗡嗡嗡嗡嗡陈词滥调是我的意思是我昨晚刚刚用 javascript 构建了自己的编译器这太容易了等等我不知道我在这里做什么哈希映射链接列表妈妈妈妈为什么我这么笨等待有向图我可以'不做我只是要告诉他们我不能做二叉树我是个冒名顶替者我会在几分钟后昏迷你有点像这样的问题你知道我认为我已经失败了这次面试这意味着我不再关心当我停止关心时神奇地焦虑消失了拧代码让我们谈谈这个问题好吧所以它看起来我们在这里有三个条件，当我们有条件时，我们使用条件语句，比如如果我可以用白板上的流程图​​来表示这一点，或者如果这不是一个选项，我可能会从编写一些伪代码开始，因为我没有在我什至不知道我要做什么之前就想担心语法或样板o 为循环的每次迭代实现一个数字，如果它可以被 3 和 5 整除，我们打印 fizzbuzz是真的哇，所以这实际上是一个非常简单的问题，当我们花时间分解它时，我完全想多了你的答案，但我真的很想看到你成功，所以在我们进行的过程中随时提出问题，这个解决方案看起来很不错，所以你会如何把它变成我最熟悉 javascript 的代码，所以我会去提前并首先将其用于实现，我们需要一个迭代 100 次的循环，因为我正在编写此代码在浪费我的时间之前的要求编写一堆代码，我稍后必须更正真正重要的是我大声思考并在整个过程中解释我的决定 通常我喜欢每个循环使用四个，但在这种情况下，我将使用传统的for 循环而不是每个循环四个，因为我碰巧知道四个现在会带来更好的表现，即使我所说的并不完全正确，面试官理解我解决问题的过程很重要，说某事几乎总是比什么也不说，当然除非你说一些蠢话在我写代码的时候说话，只需要很多练习才能适应这个遵循我刚刚制定的 abc 规则，这并不意味着总是在编码，而是总是在聊天另一个提示是，如果你感到困惑和冻结不要只是坐在那里，而是试着提出一个问题你坐在那里盯着车灯的时间越长，你就越有可能失去冷静不能让任何人在那里发疯好吧我们必须保持我们的镇静 我们已经走得太远了 有太多的事情要失去镇静 我在这里有点困惑，所以我可能会问一个问题，比如程序应该接受输入并返回特定索引的答案，还是应该总是迭代所有 100回答好问题一个循环就好了，现在我觉得我正朝着正确的方向前进，所以我接下来要做的是创建一些条件语句，这些语句与我在白板上勾勒出的内容一致现在关于 fizzbuzz 的棘手问题正在确定一个数字是否是另一个数字的倍数我想我可以除以目标数字，如果它是一个整数，它是一个匹配但如果它是一个小数，那么它不是一个应该工作的匹配，所以当它是 3 时会记录嘶嘶声5 将锁定嗡嗡声，但如果两者都是错误的然后我们将控制台记录数字是的，我认为这看起来不错让我们继续使用 bun 来运行它只是为了炫耀我对极速 javascript 工具的了解，是的，它完美运行我是一个该死的天才，有趣的是什么可以你没有神奇的类型转换你知道什么是模数啊伙计他一点都不印象我是一个失败者模数我从来没有听说过这个词哦等等你在谈论javascript中的余数运算符是的你确实有正确的模运算符为什么不试一试是的，这在这里更有意义它的作用是在进行除法时给我们余数，所以如果该数字为0，那么我们知道它是我们的任何数字的倍数'试图除以它为我们提供了一个不太依赖于 javascript 松散类型性质的解决方案，通常避免特定语言的魔法是一个好主意，面试官可能是一个拥有 50 年经验的 c 开发人员，他会认为你的聪明的小javascript技巧是中间的，模运算符基本上在每种语言中都可用，所以最好坚持这看起来很不错，但是你能在一行上打印fizzbuzz吗？哦，是的，这有点不正确，可以吗？我想我有一个想法，但我记得读过这篇文章，现在我的脑袋很乱，说 else 关键字是一种反模式，也许我应该停止相信我在互联网上读到的所有内容，让我们试一试并讨论一下，我们将首先检查对于嘶嘶声条件，然后使用 if else 几次来检查嘶嘶声和嗡嗡声，最后我们将使用 else 记录数字本身，这不仅将嘶嘶声放在一行，而且代码现在更简单了事实上，我认为它不会变得更好哦，现在看起来是正确的，如果我想添加更多条件会发生什么让我们说 7 是低音，你将如何处理那个啊，伙计，我知道它否则语句真的是垃圾永远相信一切你在互联网上读到，当你有很多条件来检查你通常想要做的一件事是尝试从该语句中提取数据时，我从来没有失败过，我们可以在这里通过为我们想要的东西定义一个变量轻松地做到这一点现在打印，我们可以设置一个 switch 语句来检查所有不同的条件，但我认为使用 if 和你看到的一样好，如果不是更好的话，我已经启用了 github copilot，但让我们把它保留在下载中，因为我真的需要现在这项工作而不是在这里进行控制台日志记录，我们将只改变变量这使我们能够消除嘶嘶声检查，并且如果我们决定向其添加额外的单词也可以更好地扩展令人印象深刻非常好令人印象深刻非常好非常正确现在你会如何描述你的算法的性能我会描述它就像你在运行它时看到的一样强大到非常强大，几乎没有滞后时间，因为我的整体方法非常快，这是描述它的一种方式更多的是在谈论大 o 时间复杂度 哦，是的，我想如果 fizzbuzz 游戏要永远持续下去，我应该在接受采访之前更好地研究大 o仅播放 100 步，这将简化为 01 或恒定时间哇，我不敢相信已经一个小时了，我已经昏迷了，我到底在哪里，这是天堂哦，嘿，恭喜你得到了这份工作，这是你的报价单有 400 000 的薪水，工作完全远程，休假时间不受限制，你要做的第一个任务是将所有蓝色按钮更改为稍微不同的蓝色哇，我不敢相信我已经花了最后一个两年把我的血汗和泪水倾注在这件事上，我妈妈会很自豪 坚持一秒钟 [音乐] 呃，看起来我们刚刚实施了招聘冻结，嗯，我将不得不取消这个提议，恭喜现在你知道如何轰炸你的技术人员了

