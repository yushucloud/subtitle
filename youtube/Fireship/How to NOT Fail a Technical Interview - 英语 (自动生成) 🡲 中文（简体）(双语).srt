1
00:00:00,000 --> 00:00:03,199
the single worst moment of my life was the moment i was born i wish that were
我生命中最糟糕的时刻是我出生的那一刻，我希望那是真的，但作为一名软件工程师，我在技术面试中经历了更糟糕的事情

2
00:00:03,199 --> 00:00:06,640
true but as a software engineer i've experienced far worse things during
但作为一名软件工程师我希望这是真的

3
00:00:06,640 --> 00:00:09,760
technical interviews if you're lucky enough to survive tutorial hell before
如果你有幸在 25 岁之前熬过教程地狱

4
00:00:09,760 --> 00:00:13,280
the age of 25 and find a way to impress the algorithms that automatically read
并找到 一种打动自动阅读简历的算法的方法

5
00:00:13,280 --> 00:00:16,480
your resume you get dropped into a high-stakes life or death game with a
你陷入了一场高风险的生死游戏，一边是

6
00:00:16,480 --> 00:00:20,160
six-figure salary on one side and orbeez on the other you can tell yourself the
六位数的薪水，一边是

7
00:00:20,160 --> 00:00:23,760
interview process is broken and maybe it is but like most things in life you
orbeez 但是就像生活中的大多数事情一样，您

8
00:00:23,760 --> 00:00:27,039
can't control it and just have to play the game in today's video you will
无法控制它，只需要在今天的视频中玩游戏，您将

9
00:00:27,039 --> 00:00:30,400
experience the psychological rollercoaster ride that is the technical
体验心理过山车，这是技术

10
00:00:30,400 --> 00:00:33,840
interview along the way you'll learn the secrets to high pressure problem solving
面试，一路上您将学习解决高压问题

11
00:00:33,840 --> 00:00:37,040
on the spot and how to impress the interviewer even if you totally suck at
的秘诀 现场以及如何给面试官留下深刻印象，即使你完全不擅长

12
00:00:37,040 --> 00:00:39,920
writing code to make this hyper-realistic i've invited a special
编写代码以使这个超现实我已经邀请了

13
00:00:39,920 --> 00:00:42,960
guest who's conducted hundreds of interviews in the real world let the
一位在现实世界中进行了数百次采访的特邀嘉宾让

14
00:00:42,960 --> 00:00:45,840
story begin
 保守党开始，

15
00:00:45,920 --> 00:00:49,200
it's been a long difficult year of hashtag learn to code i've turned down
这是一个漫长而艰难的一年，标签学习编码我拒绝了

16
00:00:49,200 --> 00:00:52,640
dates with beautiful women stopped doing flat earth research and even cancelled
与美女约会，停止进行平地研究，甚至取消了

17
00:00:52,640 --> 00:00:56,000
netflix all for the opportunity to stare at a computer screen for the rest of my
netflix，因为我有机会在余生中盯着电脑屏幕

18
00:00:56,000 --> 00:00:59,039
life thanks to this awesome video i watched on youtube i finally landed an
多亏了这个 我在 youtube 上观看的很棒的视频我终于得到了一个

19
00:00:59,039 --> 00:01:02,480
interview with big scary tech corporation i've got dozens of leak code
可怕的大型科技公司的采访我有几十个泄漏代码

20
00:01:02,480 --> 00:01:06,000
questions and a bunch of half finished udemy courses under my belt nothing can
问题和一堆半完成的udemy 课程在我的腰带下没有什么可以阻挡

21
00:01:06,000 --> 00:01:10,159
stand in my way now i'm about to jump on this call and change my life forever
我现在我要跳下去了这个电话永远改变了我的生活

22
00:01:10,159 --> 00:01:15,280
hello mr fireship my name is the primes in welcome to hell welcome to hell
你好，火船先生，我的名字是素数欢迎来到地狱欢迎来到地狱

23
00:01:15,280 --> 00:01:18,880
i'm just kidding i'll be conducting your interview today you know let's just get
我只是在开玩笑我今天将进行你的采访你知道让我们

24
00:01:18,880 --> 00:01:21,840
straight into it i'm going to ask you actually a classic question it's called
直接进入它我会问你实际上是一个经典问题，它被称为

25
00:01:21,840 --> 00:01:26,400
fizzbuzz i want you to print out numbers 1 through 100 but if it's divisible by 3
fizzbuzz 我希望你打印出数字1 到 100，但如果它可以被 3 整除，

26
00:01:26,400 --> 00:01:31,040
i want you to print out fizz if a number is divisible by 5 please print out buzz
我希望你打印出 fizz 如果一个数字可以被 5 整除，请打印出嗡嗡声，

27
00:01:31,040 --> 00:01:35,840
but if it's divisible by both 3 and 5 please print out fizz and buzz fizzbuzz
但如果它可以被两者整除 3 和 5请打印出 fizz 和 Buzz

28
00:01:35,840 --> 00:01:39,600
how cliche is that i mean i just built my own compiler in javascript last night
fizzbuzz 陈词滥调，我的意思是我昨晚刚刚用 javascript 构建了自己的编译器，

29
00:01:39,600 --> 00:01:42,400
this is too easy
这太容易

30
00:01:44,799 --> 00:01:49,680
wait a minute i have no idea what i'm doing here hash map link list mom mom
了，等一下，我不知道我在这里做什么哈希映射链接列表妈妈妈妈

31
00:01:49,680 --> 00:01:53,520
why am i so dumb wait directed graph i i can't do it i'm just going to tell them
为什么 我是不是很笨 等待有向图我做不到 我只是要告诉他们

32
00:01:53,520 --> 00:01:58,479
i can't do it binary tree i'm an imposter i'm blacking out a few moments
我做不到 二叉树 我是个冒名顶替者 我会在几分钟

33
00:01:58,479 --> 00:02:01,360
later uh mr fireship before we write any code
后昏迷 呃，在我们写任何东西之前，先生 代码

34
00:02:01,360 --> 00:02:04,320
uh let's just talk about the problem how would you kind of approach a problem
呃 让我们谈谈这个问题 你会如何处理这样的问题

35
00:02:04,320 --> 00:02:07,119
like this you know what i think i've already failed this interview which
你知道我认为我已经在这次面试中失败了 这

36
00:02:07,119 --> 00:02:10,879
means i don't care anymore and magically when i stop caring the anxiety goes away
意味着我不再关心当我停止关心时 神奇地焦虑

37
00:02:10,879 --> 00:02:14,160
screw the code let's just talk about the problem okay so it looks like we have
消失了 代码让我们谈谈这个问题好吧，所以看起来我们在

38
00:02:14,160 --> 00:02:17,520
three conditions here and when we have conditions we use a conditional
这里有三个条件，当我们有条件时，我们使用条件

39
00:02:17,520 --> 00:02:21,120
statement like if one way i could represent this is with a flowchart on a
语句，比如如果我可以用白板上的流程图来表示这一点，或者

40
00:02:21,120 --> 00:02:24,560
whiteboard or if that's not an option i might start by writing some pseudocode
如果这不是一个选项，我可能会 首先写一些伪代码，

41
00:02:24,560 --> 00:02:27,599
because i don't want to worry about syntax or boilerplate before i even know
因为我不在我什至

42
00:02:27,599 --> 00:02:30,720
what i'm going to implement for each iteration of a loop we have a number if
知道要为循环的每次迭代实现什么之前就想担心语法或样板文件如果

43
00:02:30,720 --> 00:02:34,400
it's divisible by 3 and 5 we print fizzbuzz otherwise if it's divisible by
它可以被 3 和 5 整除，我们有一个数字，我们打印fizzbuzz 否则如果它可以被 3 整除，

44
00:02:34,400 --> 00:02:38,560
3 we print fizz or if it's divisible by 5 we print buzz and finally just print
我们打印 fizz 或者如果它是 可以被 5 整除，我们打印嗡嗡声，最后只

45
00:02:38,560 --> 00:02:41,840
the number if none of these are true wow so this is actually a very simple
打印数字，如果这些都不是真的哇，所以这实际上是一个非常简单的

46
00:02:41,840 --> 00:02:45,040
problem when we take the time to break it down i was totally overthinking it i
问题，当我们花时间分解它时，我完全想多了，

47
00:02:45,040 --> 00:02:48,319
was expecting something with a really complex solution because this is big
我期待有一个非常复杂的解决方案 因为这是

48
00:02:48,319 --> 00:02:52,400
scary tech corporation after all you know i can't give you the answers but i
一家可怕的大型科技公司，毕竟你知道我不能给你答案，但我

49
00:02:52,400 --> 00:02:56,319
do really want to see you succeed so feel free to ask questions as we go
真的很想看到你成功，所以在我们继续进行的过程中随时提出问题，

50
00:02:56,319 --> 00:03:00,319
along that solution looks pretty good so how would you take that and turn it into
那个解决方案看起来很不错，你会怎么做？ 把它变成

51
00:03:00,319 --> 00:03:03,360
code i'm most comfortable in javascript so i'll go ahead and use that for the
我在javascript中最舒服的代码，所以我会继续使用它来

52
00:03:03,360 --> 00:03:07,120
implementation first we'll need a loop that iterates 100 times as i'm writing
实现首先我们需要一个循环来迭代100次，因为我正在编写

53
00:03:07,120 --> 00:03:10,159
this code i'm not thinking about getting things done quickly but rather i'm
这段代码我没有考虑完成任务 很快但 相反，我在

54
00:03:10,159 --> 00:03:13,680
taking my time and making sure i fully understand the requirements before
花时间确保我完全理解要求，然后再

55
00:03:13,680 --> 00:03:16,800
wasting my time writing a bunch of code that i'll have to correct later what's
浪费时间编写一堆我以后必须更正的代码，

56
00:03:16,800 --> 00:03:20,159
really important is that i think out loud and explain my decisions throughout
真正重要的是我在整个过程中大声思考并解释我的决定

57
00:03:20,159 --> 00:03:24,000
the process normally i like to use four each for loops but in this case i'm
通常我 喜欢每个 for 循环使用四个，但在这种情况下，我

58
00:03:24,000 --> 00:03:27,519
going to use a traditional for loop and not four each because i happen to know
将使用传统的 for 循环而不是每个循环四个，因为我碰巧知道

59
00:03:27,519 --> 00:03:30,640
that four will result in better performance now even if what i'm saying
现在四个会带来更好的性能，即使我所说

60
00:03:30,640 --> 00:03:34,159
isn't totally correct it's important for the interviewer to understand my
的并不完全正确面试官了解我的

61
00:03:34,159 --> 00:03:37,599
problem-solving process saying something is almost always better than saying
问题解决过程很重要

62
00:03:37,599 --> 00:03:41,280
nothing at all unless of course you say some dumb ass in which case it may be


63
00:03:41,280 --> 00:03:44,799
optimal to just shut the up before you set foot into the thunderdome you
Thunderdome，您

64
00:03:44,799 --> 00:03:47,840
should practice literally saying everything out loud as you solve a
应该练习在个人解决问题时大声说出所有内容

65
00:03:47,840 --> 00:03:51,440
problem personally i hate talking while i write code and it just takes a lot of


66
00:03:51,440 --> 00:03:55,040
practice to get comfortable with this follow the abc rule i just made up which
我刚刚制定的 bc 规则

67
00:03:55,040 --> 00:03:58,879
doesn't mean always be coding but always be chatting another tip is that if you
并不意味着总是在编码，而是总是在聊天另一个提示是，如果你

68
00:03:58,879 --> 00:04:02,159
get confused and freeze up don't just sit there but try to come up with a
感到困惑和僵硬，不要只是坐在那里，而是试着提出一个

69
00:04:02,159 --> 00:04:05,120
question the longer you sit there and stare at the headlights the more likely
问题，你坐在那里盯着的时间越长在大灯前，你越有可能

70
00:04:05,120 --> 00:04:09,040
you are to lose your composure can't have anyone freak out out there okay
失去镇静不能让任何人在那里吓坏了好吧

71
00:04:09,040 --> 00:04:15,120
we've gotta keep our composure we've gone too far there's too much to lose
我们必须保持镇静我们已经走得太远有太多失去

72
00:04:15,120 --> 00:04:18,639
composure i'm a little confused here so i might ask a question like should the
镇静我在这里有点困惑所以我 可能会问一个问题，比如

73
00:04:18,639 --> 00:04:22,400
program take an input and return an answer for a specific index or should it
程序是否应该接受输入并返回特定索引的答案，或者它是否应该

74
00:04:22,400 --> 00:04:27,840
always iterate over all 100 answers good question a loop is just fine now i
总是迭代所有 100 个

75
00:04:27,840 --> 00:04:30,720
feel like i'm going in the right direction so what i'll do next is create
答案？ 接下来要做的是

76
00:04:30,720 --> 00:04:33,759
a few conditional statements that line up to what i sketched out on the
创建一些条件语句，这些语句与我在

77
00:04:33,759 --> 00:04:37,520
whiteboard now the tricky thing about fizzbuzz is determining if one number is
白板上勾勒出的内容一致

78
00:04:37,520 --> 00:04:40,960
a multiple of another number i guess i could divide by the target number and if


79
00:04:40,960 --> 00:04:44,400
it's an integer it's a match but if it's a decimal then it's not a match that
一个整数，它是一个匹配项 但如果它是一个小数，那么它不是一个应该工作的匹配，

80
00:04:44,400 --> 00:04:48,240
should work so when it's 3 will log fizz when it's 5 will lock buzz but if it's
所以当它是 3 时会记录 fizz，当它是 5 时会锁定嗡嗡声，但如果这

81
00:04:48,240 --> 00:04:51,280
false on both of these then we'll just console log the number yeah i think that
两个都是错误的，那么我们将只控制台记录数字是的，我认为这

82
00:04:51,280 --> 00:04:55,040
looks good let's go ahead and use bun to run it just to show off my knowledge of
看起来不错让我们 继续使用 bun 来运行它，只是为了炫耀我对

83
00:04:55,040 --> 00:04:59,120
blazingly fast javascript tooling and yes it works perfectly i'm a goddamn
极速 JavaScript 工具的了解，是的，它运行良好

84
00:04:59,120 --> 00:05:02,720
genius interesting what can you do without magical type conversion do you


85
00:05:02,720 --> 00:05:07,120
know what modulo is ah man he's not impressed at all i'm such a loser modulo
反正我是一个模数的失败者，

86
00:05:07,120 --> 00:05:10,080
i've never even heard that word in my life oh wait are you talking about the
我一生中从未听说过这个词哦，等等，你在谈论

87
00:05:10,080 --> 00:05:13,600
remainder operator in javascript yeah you do have the modulo operator correct
javascript中的余数运算符吗是的，你确实有正确的模运算符

88
00:05:13,600 --> 00:05:16,479
why don't you give it a try yeah that would make more sense here what it does
你为什么不试一试是的在这里更有意义的是，它的作用

89
00:05:16,479 --> 00:05:20,080
is give us the remainder when doing division so if that number is 0 then we
是在进行除法时给我们余数，所以如果该数字为 0，那么我们

90
00:05:20,080 --> 00:05:23,680
know that it's a multiple of whatever number we're trying to divide by that
知道它是我们试图除以的任何数字的倍数，这

91
00:05:23,680 --> 00:05:27,199
gives us a solution that isn't so dependent on the loosely type nature of
为我们提供了一个不那么依赖的解决方案关于松散类型的性质

92
00:05:27,199 --> 00:05:30,880
javascript it's usually a good idea to avoid language specific magic the
javascript 避免特定于语言的魔法通常是一个好主意

93
00:05:30,880 --> 00:05:34,000
interviewer might be a c developer with 50 years of experience who's going to
面试官可能是一个拥有 50 年经验的 c 开发人员，他会

94
00:05:34,000 --> 00:05:37,600
think your clever little javascript tricks are mid af the modulo operator is
认为你聪明的 javascript 小技巧在模运算符

95
00:05:37,600 --> 00:05:41,039
available in basically every language so it's best to stick with that this is
基本上适用于所有语言的中间，所以最好坚持下去 这

96
00:05:41,039 --> 00:05:45,520
looking pretty good but can you make fizzbuzz print on a single line oh yeah
看起来不错，但你能在一行上打印 fizzbuzz 吗？哦，是

97
00:05:45,520 --> 00:05:48,880
that's kind of not correct is it okay i think i have an idea but i remember
的，这有点不正确，可以吗？我想我有一个想法，但我记得

98
00:05:48,880 --> 00:05:51,600
reading this article that's messing with my head right now that said the else
读过这篇文章，现在我的脑袋很乱，说 else

99
00:05:51,600 --> 00:05:54,720
keyword is an anti-pattern maybe i should stop believing everything i read
关键字是 一个反模式也许我应该停止相信我在互联网上阅读的所有内容

100
00:05:54,720 --> 00:05:57,600
on the internet let's give it a try and talk through it we'll first check for
让我们试一试并讨论它我们将首先

101
00:05:57,600 --> 00:06:01,680
the fizz buzz condition then use if else a couple times to check for fizz and
检查嘶嘶声条件然后使用 ifelse 几次检查嘶嘶

102
00:06:01,680 --> 00:06:05,520
buzz and then finally we'll use else to log the number itself not only does this
声和嗡嗡声最后 我们将使用 else 来记录数字本身，这不仅

103
00:06:05,520 --> 00:06:09,280
put fizz buzz on a single line but the code is just more simple now in fact i
将嘶嘶声放在一行上，而且代码现在更简单了，事实上我

104
00:06:09,280 --> 00:06:12,800
don't think it can get any better oh that looks correct now what happened if
认为它不会变得更好哦，看起来 现在是正确的如果

105
00:06:12,800 --> 00:06:16,960
i wanted to add some more conditions let's say 7 is bass how are you going to
我想添加更多条件会发生什么让我们说7是低音你将如何

106
00:06:16,960 --> 00:06:20,479
deal with that ah man i knew it else statements really are garbage always
处理那个啊伙计我知道否则陈述真的是垃圾总是

107
00:06:20,479 --> 00:06:23,360
believe everything you read on the internet it's never failed me when you
相信你在互联网上读到的一切当你从来没有让我失望过

108
00:06:23,360 --> 00:06:26,639
have a lot of conditions to check one thing you generally want to do is try to
有很多条件来检查您通常想要做的一件事是尝试

109
00:06:26,639 --> 00:06:30,479
extract the data out of that statement we can easily do that here by defining a
从该语句中提取数据我们可以在这里通过

110
00:06:30,479 --> 00:06:33,840
variable for the thing we want to print now we could set up a switch statement
为我们想要打印的东西定义一个变量来轻松地做到这一点现在我们可以设置一个 switch 语句

111
00:06:33,840 --> 00:06:37,440
to check all the different conditions but i think using if is just as good if
来 检查所有不同的条件，但我认为使用 if

112
00:06:37,440 --> 00:06:40,720
not better as you can see here i have github copilot enabled but let's just
和你在这里看到的一样好，如果不是更好的话，我已经启用了 github copilot，但让我们

113
00:06:40,720 --> 00:06:43,440
keep that on the download because i really need this job now instead of
把它保留在下载中，因为我现在真的需要这个工作而不是

114
00:06:43,440 --> 00:06:47,280
console logging here we'll just mutate the variable this allows us to eliminate
控制台日志记录，我们会 只是改变变量，这可以让我们

115
00:06:47,280 --> 00:06:51,039
the fizz buzz check and can also scale better if we decide to add additional
消除嘶嘶声检查，如果我们决定向它添加额外的

116
00:06:51,039 --> 00:06:55,280
words to it impressive very nice impressively very nice
单词，也可以更好地扩展

117
00:06:55,280 --> 00:06:58,880
blazingly correct now how would you describe the performance of your
夸夸你的算法的性能，

118
00:06:58,880 --> 00:07:02,800
algorithm i would describe it as strong to quite strong as you can see when i
我会把它描述为强大到相当强大，当我

119
00:07:02,800 --> 00:07:06,080
run it there's almost no lag time because my holistic approach is so
运行它时几乎没有滞后时间，因为我的整体方法非常

120
00:07:06,080 --> 00:07:10,319
blazingly fast well that's one way to describe it i was more talking about big
快，这是描述它的一种方式，我更多的是在谈论大

121
00:07:10,319 --> 00:07:13,759
o time complexity oh yeah i guess i should have studied big o a little
o 时间复杂度哦，是的，我想如果 fizzbuzz 游戏要永远持续下去，我应该在接受采访之前对 big o 进行一些研究

122
00:07:13,759 --> 00:07:17,639
better before doing this interview


123
00:07:22,080 --> 00:07:25,360
if the fizzbuzz game were to go on forever i'd say we have linear time


124
00:07:25,360 --> 00:07:30,240
complexity or o of n however technically the game is only played for 100 steps


125
00:07:30,240 --> 00:07:35,280
which would simplify down to 01 or constant time
这将简化为 01 或恒定时间

126
00:07:35,280 --> 00:07:38,560
wow i can't believe it's been an hour already i blacked out where the hell am
哇，我不敢相信已经一个小时了，我已经昏迷了，我到底在哪里，

127
00:07:38,560 --> 00:07:43,199
i is this heaven oh hey congratulations you've got the job here's your offer
这是天堂哦，嘿，恭喜你得到了这份工作，这是你的工作

128
00:07:43,199 --> 00:07:48,639
sheet with a 400 000 salary and the job is fully remote with unlimited vacation
表，薪水为 400 000 和 这项工作是完全远程的，假期

129
00:07:48,639 --> 00:07:52,160
time your first task you'll be working on is changing all of the blue buttons
时间不受限制你的第一个任务是将所有蓝色按钮

130
00:07:52,160 --> 00:07:56,400
to a slightly different color blue wow i can't believe it i've spent the
更改为稍微不同的蓝色哇，我不敢相信我在

131
00:07:56,400 --> 00:07:59,440
last two years pouring my blood sweat and tears into this and my mom is going
过去两年里一直在倾注我的 bl 大量的汗水和泪水，我妈妈

132
00:07:59,440 --> 00:08:02,570
to be so proud hold on just one second
会很自豪坚持一秒钟

133
00:08:02,570 --> 00:08:06,800
[Music] uh
[音乐]呃

134
00:08:06,800 --> 00:08:10,840
it looks like we've just implemented a hiring freeze
，看起来我们刚刚实施了招聘冻结，

135
00:08:10,840 --> 00:08:15,840
um i'm gonna have to rescind that offer congratulations now you know how to bomb
嗯，我将不得不取消这个提议，恭喜你现在知道如何了

136
00:08:15,840 --> 00:08:19,360
your technical interview just like me make sure to subscribe to the primogen
像我一样轰炸你的技术面试确保订阅

137
00:08:19,360 --> 00:08:22,960
for more awesome developer content thanks for watching and i will see you
primogen 以获得更多精彩的开发者内容感谢观看，我会在下一个见到你

138
00:08:22,960 --> 00:08:26,440
in the next one
